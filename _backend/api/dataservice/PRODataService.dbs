<data enableBatchRequests="true" enableBoxcarring="true" name="PRODataService" transports="http https local">
   <config enableOData="false" id="ToolsDataSource">
      <property name="carbon_datasource_name">ToolsDataSource</property>
   </config>
   <query id="setPedidoTrabajo" useConfig="ToolsDataSource">
      <sql>insert&#xd;	into&#xd;	pro.pedidos_trabajo (cod_proyecto,&#xd;	descripcion,&#xd;	estado,&#xd;	objetivo,&#xd;	fec_inicio,&#xd;	fec_entrega,&#xd;	usuario_app,&#xd;	umti_id,&#xd;	info_id,&#xd;	proc_id,&#xd;	empr_id,&#xd;	clie_id,&#xd;       tipt_id)&#xd;values(:cod_proyecto,&#xd;	:descripcion,&#xd;	:estado,&#xd;	:objetivo,&#xd;	to_timestamp(:fec_inicio::text,'YYYY-MM-DD HH24:MI:SS'),&#xd;	to_timestamp(:fec_entrega::text,'YYYY-MM-DD HH24:MI:SS'),&#xd;	:usuario_app,&#xd;	:umti_id,&#xd;	cast(:info_id as integer),&#xd;	:proc_id,&#xd;	cast(:empr_id as integer),&#xd;	cast(:clie_id as integer),&#xd;        :tipt_id)&#xd;returning petr_id;</sql>
      <result outputType="json">{"respuesta":{"petr_id":"$petr_id"}}</result>
      <param name="cod_proyecto" sqlType="STRING"/>
      <param name="descripcion" sqlType="STRING"/>
      <param name="estado" sqlType="STRING"/>
      <param name="objetivo" sqlType="STRING"/>
      <param name="fec_inicio" sqlType="STRING"/>
      <param name="fec_entrega" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="umti_id" sqlType="STRING"/>
      <param name="info_id" sqlType="STRING"/>
      <param name="proc_id" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="clie_id" sqlType="STRING"/>
      <param name="tipt_id" sqlType="STRING"/>
   </query>
   <query id="deletePedidoTrabajo" useConfig="ToolsDataSource">
      <sql>update pro.pedidos_trabajo &#xd;set eliminado = true&#xd;where petr_id = cast(:petr_id as integer)</sql>
      <param name="petr_id" sqlType="STRING"/>
   </query>
   <query id="updatePedidoTrabajoCaseId" useConfig="ToolsDataSource">
      <sql>update pro.pedidos_trabajo&#xd;set case_id = :case_id&#xd;where petr_id = cast(:petr_id as integer)</sql>
      <param name="case_id" sqlType="STRING"/>
      <param name="petr_id" sqlType="STRING"/>
   </query>
   <query id="getProcesos" useConfig="ToolsDataSource">
      <sql>SELECT &#xd;nombre&#xd;,descripcion &#xd;,planificar_tareas &#xd;,lanzar_bpm &#xd;,nombre_bpm &#xd;,esin_id &#xd;,form_id &#xd;FROM pro.procesos&#xd;where empr_id =cast(:empr_id as integer)&#xd;and proc_id = :proc_id &#xd;and eliminado =false;</sql>
      <result outputType="json">{&#xd;  "proceso":&#xd;    { "nombre":"$nombre",&#xd;      "descripcion":"$descripcion",&#xd;      "lanzar_bpm":$lanzar_bpm,&#xd;      "planificar_tareas":$planificar_tareas,&#xd;      "nombre_bpm":"$nombre_bpm",&#xd;      "esin_id":"$esin_id",&#xd;      "form_id":"$form_id"&#xd;&#xd;     }&#xd;}&#xd;</result>
      <param name="empr_id" sqlType="STRING"/>
      <param name="proc_id" sqlType="STRING"/>
   </query>
   <query id="getPedidosTrabajo" useConfig="ToolsDataSource">
      <sql>select pt.petr_id ,pt.cod_proyecto ,pt.descripcion ,pt.estado ,pt.objetivo ,to_char(pt.fec_inicio,'YYYY-MM-DD') as fec_inicio, to_char(pt.fec_entrega, 'YYYY-MM-DD') as fec_entrega,pt.usuario ,&#xd;pt.umti_id ,pt.info_id ,pt.proc_id,pt.empr_id ,pt.clie_id ,pt.case_id ,pt.case_id_final ,pt.tipt_id , t.descripcion tipo_trabajo,C.nombre,c.dir_entrega &#xd;from pro.pedidos_trabajo pt&#xd;, core.clientes C&#xd;, core.tablas t&#xd;,(SELECT :clave clave) AS param&#xd;where pt.empr_id = cast(:empr_id as integer)&#xd;and pt.clie_id = C.clie_id&#xd;and pt.tipt_id = t.tabl_id &#xd;and not pt.eliminado&#xd;and (upper(c.nombre) like '%' || upper(param.clave) || '%' &#xd;or upper(pt.estado) like '%' || upper(param.clave) || '%'&#xd;or upper(pt.cod_proyecto) like '%' || upper(param.clave) || '%'&#xd;or CAST(pt.petr_id AS TEXT) like '%' || upper(param.clave) || '%'&#xd;or upper(c.dir_entrega) like '%' || upper(param.clave) || '%'&#xd;or upper(t.descripcion) like '%' || upper(param.clave) || '%'&#xd;	)&#xd;order by pt.fec_alta desc</sql>
      <result outputType="json">{&#xd;  "pedidos_trabajo": {&#xd;    "pedido_trabajo": [&#xd;      {&#xd;        "petr_id": "$petr_id",&#xd;        "cod_proyecto": "$cod_proyecto",&#xd;        "descripcion": "$descripcion",&#xd;        "estado": "$estado",&#xd;        "objetivo": "$objetivo",&#xd;        "fec_inicio": "$fec_inicio",&#xd;        "fec_entrega": "$fec_entrega",&#xd;        "usuario": "$usuario",&#xd;        "umti_id": "$umti_id",&#xd;        "info_id": "$info_id",&#xd;        "proc_id": "$proc_id",&#xd;        "empr_id": "$empr_id",&#xd;        "clie_id": "$clie_id",&#xd;        "nombre":  "$nombre",&#xd;        "case_id": "$case_id",&#xd;        "case_id_final": "$case_id_final",&#xd;        "tipo_trabajo":"$tipo_trabajo",&#xd;        "tipt_id":"$tipt_id",&#xd;        "dir_entrega":"$dir_entrega"&#xd;      }&#xd;    ]&#xd;  }&#xd;}&#xd;</result>
      <param name="empr_id" sqlType="STRING"/>
      <param name="clave" sqlType="STRING"/>
   </query>
   <query id="updateEstadoPedido" useConfig="ToolsDataSource">
      <sql>update pro.pedidos_trabajo set estado = :estado&#xd;where petr_id  = cast(:petr_id as integer)</sql>
      <param name="estado" sqlType="STRING"/>
      <param name="petr_id" sqlType="STRING"/>
   </query>
   <query id="getInfoId" useConfig="ToolsDataSource">
      <sql>SELECT pe.info_id &#xd;FROM pro.pedidos_trabajo pe &#xd;where pe.petr_id = cast(:petr_id as integer)&#xd;and not pe.eliminado</sql>
      <result outputType="json">{&#xd;  "infos_id": {&#xd;    "info_id": "$info_id",&#xd;  }&#xd;}&#xd;</result>
      <param name="petr_id" optional="false" sqlType="STRING"/>
   </query>
   <query id="getinfopedidotrabajo" useConfig="ToolsDataSource">
      <sql>SELECT pe.objetivo , pe.cod_proyecto ,pe.descripcion, pe.fec_inicio , pe.fec_entrega ,pe.info_id&#xd;,t.valor unidad_medida&#xd;,t.tabl_id umti_id&#xd;,pe.petr_id&#xd;,t2.tabl_id esta_id&#xd;,t2.descripcion estado&#xd;,c.nombre nom_cliente&#xd;,c.dir_entrega&#xd;,t3.tabl_id tipt_id&#xd;,t3.descripcion tipo&#xd;,pe.case_id&#xd;FROM pro.pedidos_trabajo pe  &#xd;,core.tablas t&#xd;,core.tablas t2&#xd;,core.tablas t3&#xd;,core.clientes c &#xd;where pe.petr_id = cast(:petr_id as integer)&#xd;and pe.umti_id = t.tabl_id&#xd;and pe.estado = t2.tabl_id&#xd;and pe.tipt_id = t3.tabl_id&#xd;and pe.clie_id = c.clie_id &#xd;and not pe.eliminado</sql>
      <result outputType="json">{&#xd;  "pedidos_info": {&#xd;    "pedido_info": [&#xd;      {&#xd;        "cod_proyecto": "$cod_proyecto",&#xd;        "descripcion": "$descripcion",&#xd;        "objetivo": "$objetivo",&#xd;        "fec_inicio": "$fec_inicio",&#xd;        "fec_entrega": "$fec_entrega",&#xd;        "info_id":"$info_id",&#xd;        "unidad_medida":"$unidad_medida",&#xd;        "umti_id":"$umti_id",&#xd;        "esta_id":"$esta_id",&#xd;        "estado":"$estado",&#xd;        "nom_cliente":"$nom_cliente",&#xd;        "dir_entrega":"$dir_entrega",&#xd;        "tipo":"$tipo",&#xd;        "case_id":"$case_id",&#xd;        "@getPetrForms":"$petr_id-&gt;petr_id"&#xd;   &#xd;      }&#xd;    ]&#xd;  }&#xd;}</result>
      <param name="petr_id" optional="false" sqlType="STRING"/>
   </query>
   <query id="getinfopedidotrabajoxcaseid" useConfig="ToolsDataSource">
      <sql>SELECT pe.objetivo , pe.cod_proyecto ,pe.descripcion, to_char(pe.fec_inicio,'DD-MM-YYYY HH24:MI') as fec_inicio, to_char(pe.fec_entrega,'DD-MM-YYYY HH24:MI') as fec_entrega,pe.info_id&#xd;,t.valor unidad_medida&#xd;,t.tabl_id umti_id&#xd;,t2.tabl_id esta_id&#xd;,t2.descripcion estado&#xd;,pe.clie_id&#xd;,c.nombre as nombre_cliente&#xd;,c.dir_entrega &#xd;,pe.petr_id&#xd;,t3.descripcion tipo&#xd;,pe.case_id&#xd;,u.first_name || ' ' || u.last_name  || ' (' || pe.usuario_app || ')' as usuario_app &#xd;FROM pro.pedidos_trabajo pe&#xd;left join seg.users u on pe.usuario_app = u.usernick &#xd;left join core.clientes c on c.clie_id = pe.clie_id &#xd;,core.tablas t  &#xd;,core.tablas t2&#xd;,core.tablas t3&#xd;where pe.case_id = :case_id&#xd;and pe.umti_id = t.tabl_id&#xd;and pe.estado = t2.tabl_id&#xd;and pe.tipt_id = t3.tabl_id&#xd;and pe.eliminado != true</sql>
      <result outputType="json">{&#xd;  "pedidoTrabajo": {&#xd;        "petr_id":"$petr_id",&#xd;        "cod_proyecto": "$cod_proyecto",&#xd;        "descripcion": "$descripcion",&#xd;        "objetivo": "$objetivo",&#xd;        "fec_inicio": "$fec_inicio",&#xd;        "fec_entrega": "$fec_entrega",&#xd;        "info_id":"$info_id",&#xd;        "unidad_medida":"$unidad_medida",&#xd;        "umti_id":"$umti_id",&#xd;        "estado":"$estado",&#xd;        "esta_id":"$esta_id",&#xd;        "clie_id":"$clie_id",&#xd;        "nombre_cliente":"$nombre_cliente",&#xd;        "dir_entrega":"$dir_entrega",&#xd;        "tipo":"$tipo",&#xd;        "case_id":"$case_id",&#xd;        "usuario_app":"$usuario_app"&#xd;  }&#xd;}</result>
      <param name="case_id" optional="false" sqlType="STRING"/>
   </query>
   <query id="getInfoptrabajo" useConfig="ToolsDataSource">
      <sql>SELECT pe.objetivo , pe.cod_proyecto ,pe.descripcion, pe.fec_inicio , pe.fec_entrega, c.nombre &#xd;FROM pro.pedidos_trabajo pe, core.clientes c &#xd;where pe.petr_id = cast(:petr_id as integer)&#xd;and pe.clie_id = c.clie_id &#xd;and not pe.eliminado</sql>
      <result outputType="json">{&#xd;  "pedidos_info": {&#xd;    "pedido_info": [&#xd;      {&#xd;        "cod_proyecto": "$cod_proyecto",&#xd;         "descripcion": "$descripcion",&#xd;         "objetivo": "$objetivo",&#xd;         "fec_inicio": "$fec_inicio",&#xd;         "fec_entrega": "$fec_entrega",&#xd;         "nombre":  "$nombre"&#xd;      }&#xd;    ]&#xd;  }&#xd;}</result>
      <param name="petr_id" optional="false" sqlType="STRING"/>
   </query>
   <query id="setFormTaskPedidoTrabajo" useConfig="ToolsDataSource">
      <sql>INSERT INTO pro.pedidos_trabajo_forms&#xd;(nom_tarea, task_id, usuario_app, petr_id, info_id)&#xd;select :nom_tarea,:task_id,:usuario_app, pt.petr_id, cast(:info_id as integer)&#xd;from pro.pedidos_trabajo pt&#xd;where pt.case_id = :case_id</sql>
      <param name="nom_tarea" sqlType="STRING"/>
      <param name="task_id" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="info_id" sqlType="STRING"/>
      <param name="case_id" sqlType="STRING"/>
   </query>
   <query id="getPetrForms" useConfig="ToolsDataSource">
      <sql>select distinct(ptf.info_id)&#xd;,f.nombre nom_form&#xd;,ptf.nom_tarea&#xd;from &#xd;pro.pedidos_trabajo_forms ptf &#xd;,frm.instancias_formularios i &#xd;, frm.formularios f &#xd;where  i.info_id = ptf.info_id &#xd;and f.form_id = i.form_id &#xd;and ptf.petr_id = cast(:petr_id as integer)</sql>
      <result outputType="json">{&#xd;   "forms":{&#xd;      "form":[&#xd;         {&#xd;            "info_id":"$info_id",&#xd;            "nom_tarea":"$nom_tarea",&#xd;            "nom_form":"$nom_form"&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="petr_id" sqlType="STRING"/>
   </query>
   <query id="getProcesosForms" useConfig="ToolsDataSource">
      <sql>select * from pro.procesos_forms pf where nombre_tarea =:nombre_tarea and eliminado= false and empr_id =cast(:empr_id as integer) order by orden</sql>
      <result outputType="json">{&#xd; "formularios": {&#xd; "formulario": [&#xd; {&#xd; "nombre_tarea": "$nombre_tarea",&#xd; "form_id": "$form_id",&#xd; "orden": "$orden",&#xd; "empr_id": "$empr_id"&#xd; }&#xd; ]&#xd; }&#xd;}</result>
      <param name="nombre_tarea" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="getPedidosTrabajoNoFinalizado" useConfig="ToolsDataSource">
      <sql>select pt.petr_id ,pt.cod_proyecto ,case when  pt.int_pedi_id ='' or pt.int_pedi_id is null then 'N/A' else pt.int_pedi_id end int_pedi_id,pt.descripcion ,pt.estado ,pt.objetivo ,to_char(pt.fec_inicio,'YYYY-MM-DD') as fec_inicio, to_char(pt.fec_entrega, 'YYYY-MM-DD') as fec_entrega,pt.usuario ,&#xd;pt.umti_id ,pt.info_id ,pt.proc_id,pt.empr_id ,pt.clie_id ,pt.case_id ,pt.case_id_final ,pt.tipt_id, t.descripcion tipo_trabajo,C.nombre,c.dir_entrega &#xd;from pro.pedidos_trabajo pt&#xd;join pro.procesos p  on pt.estado != cast(:estado as varchar)&#xd;join core.clientes C on pt.clie_id = C.clie_id&#xd;join core.tablas t on pt.tipt_id = t.tabl_id&#xd;,(SELECT :clave clave) AS param&#xd;where pt.empr_id = cast(:empr_id as integer)&#xd;and not pt.eliminado&#xd;and (upper(c.nombre) like '%' || upper(param.clave) || '%' --case when param.clave is null or param.clave = '' then '%' else '%' || upper(param.clave) || '%' end&#xd;or upper(pt.estado) like '%' || upper(param.clave) || '%'&#xd;or upper(pt.cod_proyecto) like '%' || upper(param.clave) || '%'&#xd;or CAST(pt.petr_id AS TEXT) like '%' || upper(param.clave) || '%'&#xd;or upper(c.dir_entrega) like '%' || upper(param.clave) || '%'&#xd;or upper(t.descripcion) like '%' || upper(param.clave) || '%'&#xd;	)&#xd;group by pt.fec_alta, pt.petr_id, t.descripcion, c.nombre, c.dir_entrega&#xd;order by pt.fec_alta desc</sql>
      <result outputType="json">{&#xd;  "pedidos_trabajo": {&#xd;    "pedido_trabajo": [&#xd;      {&#xd;        "petr_id": "$petr_id",&#xd;        "cod_proyecto": "$cod_proyecto",&#xd;        "descripcion": "$descripcion",&#xd;        "estado": "$estado",&#xd;        "objetivo": "$objetivo",&#xd;        "fec_inicio": "$fec_inicio",&#xd;        "fec_entrega": "$fec_entrega",&#xd;        "usuario": "$usuario",&#xd;        "umti_id": "$umti_id",&#xd;        "info_id": "$info_id",&#xd;        "proc_id": "$proc_id",&#xd;        "empr_id": "$empr_id",&#xd;        "clie_id": "$clie_id",&#xd;        "nombre":  "$nombre",&#xd;        "case_id": "$case_id",&#xd;        "case_id_final": "$case_id_final",&#xd;        "tipo_trabajo":"$tipo_trabajo",&#xd;        "tipt_id":"$tipt_id",&#xd;        "dir_entrega":"$dir_entrega",&#xd;        "int_pedi_id":"$int_pedi_id"&#xd;      }&#xd;    ]&#xd;  }&#xd;}&#xd;</result>
      <param name="empr_id" sqlType="STRING"/>
      <param name="estado" sqlType="STRING"/>
      <param name="clave" sqlType="STRING"/>
   </query>
   <query id="getPedidosTrabajoPaginados" useConfig="ToolsDataSource">
      <sql>select pt.petr_id ,pt.cod_proyecto ,case when &#xd; pt.int_pedi_id ='' or pt.int_pedi_id is null then 'N/A' else pt.int_pedi_id end int_pedi_id,pt.descripcion ,pt.estado ,pt.objetivo ,to_char(pt.fec_inicio,'YYYY-MM-DD') as fec_inicio, to_char(pt.fec_entrega, 'YYYY-MM-DD') as fec_entrega,pt.usuario ,&#xd;pt.umti_id ,pt.info_id ,pt.proc_id,pt.empr_id ,pt.clie_id ,pt.case_id ,pt.case_id_final ,pt.tipt_id, t.descripcion tipo_trabajo,C.nombre,c.dir_entrega, pt.int_pedi_id &#xd;from pro.pedidos_trabajo pt&#xd;join pro.procesos p  on pt.estado != cast(:estado as varchar)&#xd;join core.clientes C on pt.clie_id = C.clie_id&#xd;join core.tablas t on pt.tipt_id = t.tabl_id&#xd;,(SELECT :clave clave) AS param&#xd;where pt.empr_id = cast(:empr_id as integer)&#xd;and not pt.eliminado&#xd;and (upper(c.nombre) like '%' || upper(param.clave) || '%' --case when param.clave is null or param.clave = '' then '%' else '%' || upper(param.clave) || '%' end&#xd;or upper(pt.estado) like '%' || upper(param.clave) || '%'&#xd;or upper(pt.cod_proyecto) like '%' || upper(param.clave) || '%'&#xd;or CAST(pt.petr_id AS TEXT) like '%' || upper(param.clave) || '%'&#xd;or upper(c.dir_entrega) like '%' || upper(param.clave) || '%'&#xd;or upper(t.descripcion) like '%' || upper(param.clave) || '%'&#xd;	)&#xd;group by pt.fec_alta, pt.petr_id, t.descripcion, c.nombre, c.dir_entrega&#xd;order by pt.fec_alta desc&#xd;limit cast(:length as integer) offset cast(:start as integer)</sql>
      <result outputType="json">{&#xd;  "pedidos_trabajo": {&#xd;    "pedido_trabajo": [&#xd;      {&#xd;        "petr_id": "$petr_id",&#xd;        "cod_proyecto": "$cod_proyecto",&#xd;        "descripcion": "$descripcion",&#xd;        "estado": "$estado",&#xd;        "objetivo": "$objetivo",&#xd;        "fec_inicio": "$fec_inicio",&#xd;        "fec_entrega": "$fec_entrega",&#xd;        "usuario": "$usuario",&#xd;        "umti_id": "$umti_id",&#xd;        "info_id": "$info_id",&#xd;        "proc_id": "$proc_id",&#xd;        "empr_id": "$empr_id",&#xd;        "clie_id": "$clie_id",&#xd;        "nombre":  "$nombre",&#xd;        "case_id": "$case_id",&#xd;        "case_id_final": "$case_id_final",&#xd;        "tipo_trabajo":"$tipo_trabajo",&#xd;        "tipt_id":"$tipt_id",&#xd;        "dir_entrega":"$dir_entrega",&#xd;        "int_pedi_id":"$int_pedi_id"&#xd;      }&#xd;    ]&#xd;  }&#xd;}&#xd;</result>
      <param name="empr_id" sqlType="STRING"/>
      <param name="length" sqlType="STRING"/>
      <param name="start" sqlType="STRING"/>
      <param name="estado" sqlType="STRING"/>
      <param name="clave" sqlType="STRING"/>
   </query>
   <query id="getPedidosTrabajoFinalizadosPaginados" useConfig="ToolsDataSource">
      <sql>select pt.petr_id ,pt.cod_proyecto ,case when pt.int_pedi_id ='' or pt.int_pedi_id is null then 'N/A' else pt.int_pedi_id end int_pedi_id, pt.descripcion ,pt.estado ,pt.objetivo ,to_char(pt.fec_inicio,'YYYY-MM-DD') as fec_inicio, to_char(pt.fec_entrega, 'YYYY-MM-DD') as fec_entrega,pt.usuario ,&#xd;pt.umti_id ,pt.info_id ,pt.proc_id,pt.empr_id ,pt.clie_id ,pt.case_id ,pt.case_id_final ,pt.tipt_id , t.descripcion tipo_trabajo,C.nombre,c.dir_entrega, pt.int_pedi_id  &#xd;from pro.pedidos_trabajo pt&#xd;, core.clientes C&#xd;, core.tablas t&#xd;,(SELECT :clave clave) AS param&#xd;where pt.empr_id = cast(:empr_id as integer)&#xd;and pt.clie_id = C.clie_id&#xd;and pt.tipt_id = t.tabl_id &#xd;and not pt.eliminado&#xd;and (upper(c.nombre) like '%' || upper(param.clave) || '%' &#xd;or upper(pt.estado) like '%' || upper(param.clave) || '%'&#xd;or upper(pt.cod_proyecto) like '%' || upper(param.clave) || '%'&#xd;or CAST(pt.petr_id AS TEXT) like '%' || upper(param.clave) || '%'&#xd;or upper(c.dir_entrega) like '%' || upper(param.clave) || '%'&#xd;or upper(t.descripcion) like '%' || upper(param.clave) || '%'&#xd;	)&#xd;order by pt.fec_alta desc&#xd;limit cast(:length as integer) offset cast(:start as integer)</sql>
      <result outputType="json">{&#xd;  "pedidos_trabajo": {&#xd;    "pedido_trabajo": [&#xd;      {&#xd;        "petr_id": "$petr_id",&#xd;        "cod_proyecto": "$cod_proyecto",&#xd;        "descripcion": "$descripcion",&#xd;        "estado": "$estado",&#xd;        "objetivo": "$objetivo",&#xd;        "fec_inicio": "$fec_inicio",&#xd;        "fec_entrega": "$fec_entrega",&#xd;        "usuario": "$usuario",&#xd;        "umti_id": "$umti_id",&#xd;        "info_id": "$info_id",&#xd;        "proc_id": "$proc_id",&#xd;        "empr_id": "$empr_id",&#xd;        "clie_id": "$clie_id",&#xd;        "nombre":  "$nombre",&#xd;        "case_id": "$case_id",&#xd;        "case_id_final": "$case_id_final",&#xd;        "tipo_trabajo":"$tipo_trabajo",&#xd;        "tipt_id":"$tipt_id",&#xd;        "dir_entrega":"$dir_entrega",&#xd;        "int_pedi_id":"$int_pedi_id"&#xd;      }&#xd;    ]&#xd;  }&#xd;}</result>
      <param name="clave" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="length" sqlType="STRING"/>
      <param name="start" sqlType="STRING"/>
   </query>
   <query id="getPedidosTrabajoPaginadosAsc" useConfig="ToolsDataSource">
      <sql>select pt.petr_id ,pt.cod_proyecto ,case when &#xd; pt.int_pedi_id ='' or pt.int_pedi_id is null then 'N/A' else pt.int_pedi_id end int_pedi_id,pt.descripcion ,pt.estado ,pt.objetivo ,to_char(pt.fec_inicio,'YYYY-MM-DD') as fec_inicio, to_char(pt.fec_entrega, 'YYYY-MM-DD') as fec_entrega,pt.usuario ,&#xd;pt.umti_id ,pt.info_id ,pt.proc_id,pt.empr_id ,pt.clie_id ,pt.case_id ,pt.case_id_final ,pt.tipt_id, t.descripcion tipo_trabajo,C.nombre,c.dir_entrega, pt.int_pedi_id &#xd;from pro.pedidos_trabajo pt&#xd;join pro.procesos p  on pt.estado != cast(:estado as varchar)&#xd;join core.clientes C on pt.clie_id = C.clie_id&#xd;join core.tablas t on pt.tipt_id = t.tabl_id&#xd;,(SELECT :clave clave) AS param&#xd;where pt.empr_id = cast(:empr_id as integer)&#xd;and not pt.eliminado&#xd;and (upper(c.nombre) like '%' || upper(param.clave) || '%' --case when param.clave is null or param.clave = '' then '%' else '%' || upper(param.clave) || '%' end&#xd;or upper(pt.estado) like '%' || upper(param.clave) || '%'&#xd;or upper(pt.cod_proyecto) like '%' || upper(param.clave) || '%'&#xd;or CAST(pt.petr_id AS TEXT) like '%' || upper(param.clave) || '%'&#xd;or upper(c.dir_entrega) like '%' || upper(param.clave) || '%'&#xd;or upper(t.descripcion) like '%' || upper(param.clave) || '%'&#xd;	)&#xd;group by pt.fec_alta, pt.petr_id, t.descripcion, c.nombre, c.dir_entrega&#xd;order by case when :orden = "c.nombre" then c.nombre end asc limit cast(:length as integer) offset cast(:start as integer)</sql>
      <result outputType="json">{&#xd;  "pedidos_trabajo": {&#xd;    "pedido_trabajo": [&#xd;      {&#xd;        "petr_id": "$petr_id",&#xd;        "cod_proyecto": "$cod_proyecto",&#xd;        "descripcion": "$descripcion",&#xd;        "estado": "$estado",&#xd;        "objetivo": "$objetivo",&#xd;        "fec_inicio": "$fec_inicio",&#xd;        "fec_entrega": "$fec_entrega",&#xd;        "usuario": "$usuario",&#xd;        "umti_id": "$umti_id",&#xd;        "info_id": "$info_id",&#xd;        "proc_id": "$proc_id",&#xd;        "empr_id": "$empr_id",&#xd;        "clie_id": "$clie_id",&#xd;        "nombre":  "$nombre",&#xd;        "case_id": "$case_id",&#xd;        "case_id_final": "$case_id_final",&#xd;        "tipo_trabajo":"$tipo_trabajo",&#xd;        "tipt_id":"$tipt_id",&#xd;        "dir_entrega":"$dir_entrega",&#xd;        "int_pedi_id":"$int_pedi_id"&#xd;      }&#xd;    ]&#xd;  }&#xd;}</result>
      <param name="estado" sqlType="STRING"/>
      <param name="clave" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="length" sqlType="STRING"/>
      <param name="start" sqlType="STRING"/>
      <param name="orden" sqlType="STRING"/>
   </query>
   <query id="getPedidosTrabajoFinalizadosPaginadosAsc" useConfig="ToolsDataSource">
      <sql>select pt.petr_id ,pt.cod_proyecto ,case when pt.int_pedi_id ='' or pt.int_pedi_id is null then 'N/A' else pt.int_pedi_id end int_pedi_id, pt.descripcion ,pt.estado ,pt.objetivo ,to_char(pt.fec_inicio,'YYYY-MM-DD') as fec_inicio, to_char(pt.fec_entrega, 'YYYY-MM-DD') as fec_entrega,pt.usuario ,&#xd;pt.umti_id ,pt.info_id ,pt.proc_id,pt.empr_id ,pt.clie_id ,pt.case_id ,pt.case_id_final ,pt.tipt_id , t.descripcion tipo_trabajo,C.nombre,c.dir_entrega, pt.int_pedi_id  &#xd;from pro.pedidos_trabajo pt&#xd;, core.clientes C&#xd;, core.tablas t&#xd;,(SELECT :clave clave) AS param&#xd;where pt.empr_id = cast(:empr_id as integer)&#xd;and pt.clie_id = C.clie_id&#xd;and pt.tipt_id = t.tabl_id &#xd;and not pt.eliminado&#xd;and (upper(c.nombre) like '%' || upper(param.clave) || '%' &#xd;or upper(pt.estado) like '%' || upper(param.clave) || '%'&#xd;or upper(pt.cod_proyecto) like '%' || upper(param.clave) || '%'&#xd;or CAST(pt.petr_id AS TEXT) like '%' || upper(param.clave) || '%'&#xd;or upper(c.dir_entrega) like '%' || upper(param.clave) || '%'&#xd;or upper(t.descripcion) like '%' || upper(param.clave) || '%'&#xd;	)&#xd;order by tipo_trabajo asc&#xd;limit cast(:length as integer) offset cast(:start as integer)</sql>
      <result outputType="json">{&#xd;  "pedidos_trabajo": {&#xd;    "pedido_trabajo": [&#xd;      {&#xd;        "petr_id": "$petr_id",&#xd;        "cod_proyecto": "$cod_proyecto",&#xd;        "descripcion": "$descripcion",&#xd;        "estado": "$estado",&#xd;        "objetivo": "$objetivo",&#xd;        "fec_inicio": "$fec_inicio",&#xd;        "fec_entrega": "$fec_entrega",&#xd;        "usuario": "$usuario",&#xd;        "umti_id": "$umti_id",&#xd;        "info_id": "$info_id",&#xd;        "proc_id": "$proc_id",&#xd;        "empr_id": "$empr_id",&#xd;        "clie_id": "$clie_id",&#xd;        "nombre":  "$nombre",&#xd;        "case_id": "$case_id",&#xd;        "case_id_final": "$case_id_final",&#xd;        "tipo_trabajo":"$tipo_trabajo",&#xd;        "tipt_id":"$tipt_id",&#xd;        "dir_entrega":"$dir_entrega",&#xd;        "int_pedi_id":"$int_pedi_id"&#xd;      }&#xd;    ]&#xd;  }&#xd;}</result>
      <param name="clave" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="length" sqlType="STRING"/>
      <param name="start" sqlType="STRING"/>
   </query>
   <query id="getPedidosTrabajoPaginadosAscV2" useConfig="ToolsDataSource">
      <sql>SELECT&#xd;    pt.petr_id,&#xd;    pt.cod_proyecto,&#xd;CASE&#xd;        WHEN pt.int_pedi_id = ''&#xd;        OR pt.int_pedi_id IS NULL THEN 'N/A'&#xd;        ELSE pt.int_pedi_id&#xd;    END AS int_pedi_id,&#xd;    pt.descripcion,&#xd;    pt.estado,&#xd;    pt.objetivo,&#xd;    to_char(pt.fec_inicio, 'YYYY-MM-DD') AS fec_inicio,&#xd;    to_char(pt.fec_entrega, 'YYYY-MM-DD') AS fec_entrega,&#xd;    pt.usuario,&#xd;    pt.umti_id,&#xd;    pt.info_id,&#xd;    pt.proc_id,&#xd;    pt.empr_id,&#xd;    pt.clie_id,&#xd;    pt.case_id,&#xd;    pt.case_id_final,&#xd;    pt.tipt_id,&#xd;    t.descripcion AS tipo_trabajo,&#xd;    C.nombre,&#xd;    C.dir_entrega,&#xd;    pt.int_pedi_id&#xd;FROM&#xd;    pro.pedidos_trabajo pt&#xd;    JOIN pro.procesos p ON pt.estado != CAST(:estado AS varchar)&#xd;    JOIN core.clientes C ON pt.clie_id = C.clie_id&#xd;    JOIN core.tablas t ON pt.tipt_id = t.tabl_id&#xd;    JOIN (&#xd;        SELECT&#xd;            :clave clave,&#xd;            :filtro filtro&#xd;    ) AS param ON TRUE&#xd;WHERE&#xd;    pt.empr_id = CAST(:empr_id AS integer)&#xd;    AND NOT pt.eliminado&#xd;    AND (&#xd;        UPPER(C.nombre) LIKE '%' || UPPER(param.clave) || '%'&#xd;        OR UPPER(pt.estado) LIKE '%' || UPPER(param.clave) || '%'&#xd;        OR UPPER(pt.cod_proyecto) LIKE '%' || UPPER(param.clave) || '%'&#xd;        OR CAST(pt.petr_id AS TEXT) LIKE '%' || UPPER(param.clave) || '%'&#xd;        OR UPPER(C.dir_entrega) LIKE '%' || UPPER(param.clave) || '%'&#xd;        OR UPPER(t.descripcion) LIKE '%' || UPPER(param.clave) || '%'&#xd;    )&#xd;GROUP BY&#xd;    pt.fec_alta,&#xd;    pt.petr_id,&#xd;    t.descripcion,&#xd;    C.nombre,&#xd;    C.dir_entrega,&#xd;    param.filtro&#xd;ORDER BY&#xd;    case when param.filtro = 'petr_id' THEN pt.petr_id  end asc,    &#xd;    case when param.filtro = 'cod_proyecto' THEN pt.cod_proyecto end asc,&#xd;    case when param.filtro = 'nombre' THEN c.nombre end asc,&#xd;    case when param.filtro = 'dir_entrega' then c.dir_entrega end asc,&#xd;    case when param.filtro = 'tipo_trabajo' then t.descripcion end asc,&#xd;    case when param.filtro = 'fec_inicio' then pt.fec_inicio  end asc&#xd;LIMIT&#xd;    CAST(:length AS integer) OFFSET CAST(:start AS integer)</sql>
      <result outputType="json">{&#xd;  "pedidos_trabajo": {&#xd;    "pedido_trabajo": [&#xd;      {&#xd;        "petr_id": "$petr_id",&#xd;        "cod_proyecto": "$cod_proyecto",&#xd;        "descripcion": "$descripcion",&#xd;        "estado": "$estado",&#xd;        "objetivo": "$objetivo",&#xd;        "fec_inicio": "$fec_inicio",&#xd;        "fec_entrega": "$fec_entrega",&#xd;        "usuario": "$usuario",&#xd;        "umti_id": "$umti_id",&#xd;        "info_id": "$info_id",&#xd;        "proc_id": "$proc_id",&#xd;        "empr_id": "$empr_id",&#xd;        "clie_id": "$clie_id",&#xd;        "nombre":  "$nombre",&#xd;        "case_id": "$case_id",&#xd;        "case_id_final": "$case_id_final",&#xd;        "tipo_trabajo":"$tipo_trabajo",&#xd;        "tipt_id":"$tipt_id",&#xd;        "dir_entrega":"$dir_entrega",&#xd;        "int_pedi_id":"$int_pedi_id"&#xd;      }&#xd;    ]&#xd;  }&#xd;}</result>
      <param name="estado" sqlType="STRING"/>
      <param name="clave" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="length" sqlType="STRING"/>
      <param name="start" sqlType="STRING"/>
      <param name="filtro" sqlType="STRING"/>
   </query>
   <query id="getPedidosTrabajoPaginadosDscV2" useConfig="ToolsDataSource">
      <sql>SELECT&#xd;    pt.petr_id,&#xd;    pt.cod_proyecto,&#xd;CASE&#xd;        WHEN pt.int_pedi_id = ''&#xd;        OR pt.int_pedi_id IS NULL THEN 'N/A'&#xd;        ELSE pt.int_pedi_id&#xd;    END AS int_pedi_id,&#xd;    pt.descripcion,&#xd;    pt.estado,&#xd;    pt.objetivo,&#xd;    to_char(pt.fec_inicio, 'YYYY-MM-DD') AS fec_inicio,&#xd;    to_char(pt.fec_entrega, 'YYYY-MM-DD') AS fec_entrega,&#xd;    pt.usuario,&#xd;    pt.umti_id,&#xd;    pt.info_id,&#xd;    pt.proc_id,&#xd;    pt.empr_id,&#xd;    pt.clie_id,&#xd;    pt.case_id,&#xd;    pt.case_id_final,&#xd;    pt.tipt_id,&#xd;    t.descripcion AS tipo_trabajo,&#xd;    C.nombre,&#xd;    C.dir_entrega,&#xd;    pt.int_pedi_id&#xd;FROM&#xd;    pro.pedidos_trabajo pt&#xd;    JOIN pro.procesos p ON pt.estado != CAST(:estado AS varchar)&#xd;    JOIN core.clientes C ON pt.clie_id = C.clie_id&#xd;    JOIN core.tablas t ON pt.tipt_id = t.tabl_id&#xd;    JOIN (&#xd;        SELECT&#xd;            :clave clave,&#xd;            :filtro filtro&#xd;    ) AS param ON TRUE&#xd;WHERE&#xd;    pt.empr_id = CAST(:empr_id AS integer)&#xd;    AND NOT pt.eliminado&#xd;    AND (&#xd;        UPPER(C.nombre) LIKE '%' || UPPER(param.clave) || '%'&#xd;        OR UPPER(pt.estado) LIKE '%' || UPPER(param.clave) || '%'&#xd;        OR UPPER(pt.cod_proyecto) LIKE '%' || UPPER(param.clave) || '%'&#xd;        OR CAST(pt.petr_id AS TEXT) LIKE '%' || UPPER(param.clave) || '%'&#xd;        OR UPPER(C.dir_entrega) LIKE '%' || UPPER(param.clave) || '%'&#xd;        OR UPPER(t.descripcion) LIKE '%' || UPPER(param.clave) || '%'&#xd;    )&#xd;GROUP BY&#xd;    pt.fec_alta,&#xd;    pt.petr_id,&#xd;    t.descripcion,&#xd;    C.nombre,&#xd;    C.dir_entrega,&#xd;    param.filtro&#xd;ORDER BY&#xd;    case when param.filtro = 'petr_id' THEN pt.petr_id  end desc,    &#xd;    case when param.filtro = 'cod_proyecto' THEN pt.cod_proyecto end desc,&#xd;    case when param.filtro = 'nombre' THEN c.nombre end desc,&#xd;    case when param.filtro = 'dir_entrega' then c.dir_entrega end desc,&#xd;    case when param.filtro = 'tipo_trabajo' then t.descripcion end desc,&#xd;    case when param.filtro = 'fec_inicio' then pt.fec_inicio  end desc&#xd;LIMIT&#xd;    CAST(:length AS integer) OFFSET CAST(:start AS integer)</sql>
      <result outputType="json">{&#xd;  "pedidos_trabajo": {&#xd;    "pedido_trabajo": [&#xd;      {&#xd;        "petr_id": "$petr_id",&#xd;        "cod_proyecto": "$cod_proyecto",&#xd;        "descripcion": "$descripcion",&#xd;        "estado": "$estado",&#xd;        "objetivo": "$objetivo",&#xd;        "fec_inicio": "$fec_inicio",&#xd;        "fec_entrega": "$fec_entrega",&#xd;        "usuario": "$usuario",&#xd;        "umti_id": "$umti_id",&#xd;        "info_id": "$info_id",&#xd;        "proc_id": "$proc_id",&#xd;        "empr_id": "$empr_id",&#xd;        "clie_id": "$clie_id",&#xd;        "nombre":  "$nombre",&#xd;        "case_id": "$case_id",&#xd;        "case_id_final": "$case_id_final",&#xd;        "tipo_trabajo":"$tipo_trabajo",&#xd;        "tipt_id":"$tipt_id",&#xd;        "dir_entrega":"$dir_entrega",&#xd;        "int_pedi_id":"$int_pedi_id"&#xd;      }&#xd;    ]&#xd;  }&#xd;}</result>
      <param name="estado" sqlType="STRING"/>
      <param name="clave" sqlType="STRING"/>
      <param name="filtro" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="length" sqlType="STRING"/>
      <param name="start" sqlType="STRING"/>
   </query>
   <resource method="POST" path="/pedidoTrabajo">
      <call-query href="setPedidoTrabajo">
         <with-param name="cod_proyecto" query-param="cod_proyecto"/>
         <with-param name="descripcion" query-param="descripcion"/>
         <with-param name="estado" query-param="estado"/>
         <with-param name="objetivo" query-param="objetivo"/>
         <with-param name="fec_inicio" query-param="fec_inicio"/>
         <with-param name="fec_entrega" query-param="fec_entrega"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="umti_id" query-param="umti_id"/>
         <with-param name="info_id" query-param="info_id"/>
         <with-param name="proc_id" query-param="proc_id"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="clie_id" query-param="clie_id"/>
         <with-param name="tipt_id" query-param="tipt_id"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/pedidoTrabajo">
      <call-query href="deletePedidoTrabajo">
         <with-param name="petr_id" query-param="petr_id"/>
      </call-query>
   </resource>
   <resource method="PUT" path="/pedidoTrabajo">
      <call-query href="updatePedidoTrabajoCaseId">
         <with-param name="case_id" query-param="case_id"/>
         <with-param name="petr_id" query-param="petr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/proceso/nombre/{proc_id}/empresa/{empr_id}">
      <call-query href="getProcesos">
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="proc_id" query-param="proc_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/pedidoTrabajo/{empr_id}/{clave}">
      <call-query href="getPedidosTrabajo">
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="clave" query-param="clave"/>
      </call-query>
   </resource>
   <resource method="PUT" path="/pedidoTrabajo/estado/{petr_id}">
      <call-query href="updateEstadoPedido">
         <with-param name="estado" query-param="estado"/>
         <with-param name="petr_id" query-param="petr_id"/>
      </call-query>
   </resource>
   <resource method="PUT" path="/pedidoTrabajo/estado">
      <call-query href="updateEstadoPedido">
         <with-param name="estado" query-param="estado"/>
         <with-param name="petr_id" query-param="petr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/info_id/{petr_id}">
      <call-query href="getInfoId">
         <with-param name="petr_id" query-param="petr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/pedidoinfo/{petr_id}">
      <call-query href="getinfopedidotrabajo"/>
   </resource>
   <resource method="GET" path="/getInfotrabajo/{petr_id}">
      <call-query href="getInfoptrabajo">
         <with-param name="petr_id" query-param="petr_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/pedidoTrabajo/tarea/form">
      <call-query href="setFormTaskPedidoTrabajo">
         <with-param name="nom_tarea" query-param="nom_tarea"/>
         <with-param name="task_id" query-param="task_id"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="info_id" query-param="info_id"/>
         <with-param name="case_id" query-param="case_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/pedidoTrabajo/xcaseid/{case_id}">
      <call-query href="getinfopedidotrabajoxcaseid">
         <with-param name="case_id" query-param="case_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/pedidoTrabajo/petr_id/{petr_id}">
      <call-query href="getinfopedidotrabajo">
         <with-param name="petr_id" query-param="petr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/proceso/tarea/{nombre_tarea}/empresa/{empr_id}">
      <call-query href="getProcesosForms">
         <with-param name="nombre_tarea" query-param="nombre_tarea"/>
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/pedidoTrabajoNoFinalizado/{empr_id}/{estado}/{clave}">
      <call-query href="getPedidosTrabajoNoFinalizado">
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="estado" query-param="estado"/>
         <with-param name="clave" query-param="clave"/>
      </call-query>
   </resource>
   <resource method="GET" path="/pedidoTrabajoPaginado/{empr_id}/{estado}/{length}/{start}/{clave}">
      <call-query href="getPedidosTrabajoPaginados">
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="length" query-param="length"/>
         <with-param name="start" query-param="start"/>
         <with-param name="estado" query-param="estado"/>
         <with-param name="clave" query-param="clave"/>
      </call-query>
   </resource>
   <resource method="GET" path="/pedidoTrabajoFinalizadosPaginado/{empr_id}/{length}/{start}/{clave}">
      <call-query href="getPedidosTrabajoFinalizadosPaginados">
         <with-param name="clave" query-param="clave"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="length" query-param="length"/>
         <with-param name="start" query-param="start"/>
      </call-query>
   </resource>
   <resource method="GET" path="/pedidoTrabajoFinalizadosPaginadoAsc/{empr_id}/{length}/{start}/{clave}">
      <call-query href="getPedidosTrabajoFinalizadosPaginadosAsc">
         <with-param name="clave" query-param="clave"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="length" query-param="length"/>
         <with-param name="start" query-param="start"/>
      </call-query>
   </resource>
   <resource method="GET" path="/pedidoTrabajoPaginadoAscV2/{empr_id}/{estado}/{length}/{start}/{clave}/{filtro}">
      <call-query href="getPedidosTrabajoPaginadosAscV2">
         <with-param name="estado" query-param="estado"/>
         <with-param name="clave" query-param="clave"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="length" query-param="length"/>
         <with-param name="start" query-param="start"/>
         <with-param name="filtro" query-param="filtro"/>
      </call-query>
   </resource>
   <resource method="GET" path="/pedidoTrabajoPaginadoAsc/{empr_id}/{estado}/{length}/{start}/{clave}">
      <call-query href="getPedidosTrabajoPaginadosAsc">
         <with-param name="estado" query-param="estado"/>
         <with-param name="clave" query-param="clave"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="length" query-param="length"/>
         <with-param name="start" query-param="start"/>
         <with-param name="orden" query-param="orden"/>
      </call-query>
   </resource>
   <resource method="GET" path="/pedidoTrabajoPaginadoDscV2/{empr_id}/{estado}/{length}/{start}/{clave}/{filtro}">
      <call-query href="getPedidosTrabajoPaginadosDscV2">
         <with-param name="estado" query-param="estado"/>
         <with-param name="clave" query-param="clave"/>
         <with-param name="filtro" query-param="filtro"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="length" query-param="length"/>
         <with-param name="start" query-param="start"/>
      </call-query>
   </resource>
</data>
