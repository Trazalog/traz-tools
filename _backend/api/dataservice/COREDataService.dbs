<data enableBatchRequests="true" enableBoxcarring="true" name="COREDataService" transports="http https local">
   <config enableOData="false" id="ToolsDataSource">
      <property name="carbon_datasource_name">ToolsDataSource</property>
   </config>
   <config enableOData="false" id="AssetPlannerDataSource">
      <property name="carbon_datasource_name">AssetPlannerDataSource</property>
   </config>
   <query id="getMenuByUserPermission" useConfig="ToolsDataSource">
      <sql>SELECT DISTINCT(m.*)&#xd;FROM (WITH RECURSIVE menu_tree AS(&#xd;SELECT&#xd;	m.modulo , m.opcion, m.opcion_padre, m.texto , m.url , m.javascript , m.url_icono , m.texto_onmouseover, 1 AS nivel, m.orden || '.' || m.modulo || '.' || m.opcion AS camino&#xd;FROM&#xd;	seg.menues M&#xd;WHERE&#xd;	M.opcion_padre IS NULL&#xd;	AND eliminado = 0&#xd;UNION&#xd;SELECT&#xd;	m.modulo , m.opcion , m.opcion_padre , m.texto , m.url , m.javascript , m.url_icono , m.texto_onmouseover, (t.nivel + 1) AS nivel, t.camino || '&gt;' || m.orden || '.' || m.modulo || '.' || m.opcion AS PATH&#xd;FROM&#xd;	seg.menues M&#xd;INNER JOIN menu_tree t ON&#xd;	m.opcion_padre = t.opcion&#xd;	AND m.modulo = t.modulo&#xd;WHERE&#xd;	m.eliminado = 0 )&#xd;SELECT&#xd;	t.*&#xd;	,case WHEN meme."role" IS NOT null OR meme."group" IS NOT NULL THEN true ELSE false END habilitado&#xd;FROM&#xd;	(SELECT mt.* FROM menu_tree mt) t&#xd;	LEFT JOIN (select * from seg.menues_users_vw&#xd;			   where email=:email or email='TODOS' ) meme&#xd;	on meme.opcion = t.opcion&#xd;	AND meme.modulo = t.modulo&#xd;	and (meme.group = :group or meme.group='TODOS')&#xd;) m ORDER BY m.camino</sql>
      <result outputType="json">{&#xd;   "menu_items":{&#xd;      "menu_item":[&#xd;         {&#xd;            "modulo":"$modulo",&#xd;            "opcion":"$opcion",&#xd;            "opcion_padre":"$opcion_padre",&#xd;            "texto":"$texto",&#xd;            "url":"$url",&#xd;            "javascript":"$javascript",&#xd;            "url_icono":"$url_icono",&#xd;            "texto_onmouseover":"$texto_onmouseover",&#xd;            "nivel":"$nivel",&#xd;            "camino":"$camino",&#xd;            "habilitado":"$habilitado"&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="email" sqlType="STRING"/>
      <param name="group" sqlType="STRING"/>
   </query>
   <query id="setParametro" useConfig="ToolsDataSource">
      <sql>INSERT INTO utl_tablas&#xd;(tabla, valor, descripcion)&#xd;VALUES&#xd;(:tabla, :valor, :descripcion)</sql>
      <param name="tabla" sqlType="STRING"/>
      <param name="valor" sqlType="STRING"/>
      <param name="descripcion" sqlType="STRING"/>
   </query>
   <query id="getParametros" useConfig="ToolsDataSource">
      <sql>SELECT * &#xd;FROM alm.utl_tablas&#xd;WHERE tabla = :tabla</sql>
      <result outputType="json">{&#xd; "parametros": {&#xd; "parametro": [&#xd; {&#xd; "valor": "$valor",&#xd; "descripcion": "$descripcion"&#xd; }&#xd; ]&#xd; }&#xd;}</result>
      <param name="tabla" sqlType="STRING"/>
   </query>
   <query id="getTabla" useConfig="ToolsDataSource">
      <sql>SELECT * &#xd;FROM core.tablas&#xd;WHERE tabla = :tabla&#xd;and eliminado = false</sql>
      <result outputType="json">{&#xd;    "tablas":{&#xd;        "tabla":[&#xd;            {&#xd;                "tabl_id":"$tabl_id",&#xd;                "valor":"$valor",&#xd;                "valor2":"$valor2",&#xd;                "valor3":"$valor3",&#xd;                "descripcion":"$descripcion",&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="tabla" sqlType="STRING"/>
   </query>
   <query id="setSnapshot" useConfig="ToolsDataSource">
      <sql>INSERT INTO core.snapshots&#xd;(snap_id, "data") &#xd;VALUES(:clave, :data)&#xd;ON CONFLICT (snap_id) DO UPDATE &#xd;  SET "data" = excluded.data;</sql>
      <param name="data" sqlType="STRING"/>
      <param name="clave" sqlType="STRING"/>
   </query>
   <query id="getSnapshot" useConfig="ToolsDataSource">
      <sql>SELECT * FROM core.snapshots WHERE snap_id = :clave</sql>
      <result outputType="json">{&#xd;    "data":{&#xd;        "snapshot":[&#xd;            {&#xd;                "data":"$data"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="clave" sqlType="STRING"/>
   </query>
   <query id="delSnapshot" useConfig="ToolsDataSource">
      <sql>DELETE FROM&#xd;core.snapshots&#xd;where snap_id = :clave</sql>
      <param name="clave" sqlType="STRING"/>
   </query>
   <query id="getUsers" useConfig="ToolsDataSource">
      <sql>select id, first_name, last_name, email&#xd;FROM seg.users &#xd;WHERE status = 'approved' and banned_users = 'unban'</sql>
      <result outputType="json">{&#xd;   "users":{&#xd;      "user":[&#xd;         {&#xd;            "id_user":"$id",&#xd;            "first_name_user":"$first_name",&#xd;            "last_name_user":"$last_name",&#xd;            "email_user":"$email"&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
   </query>
   <query id="setTabla" useConfig="ToolsDataSource">
      <sql>INSERT INTO core.tablas&#xd;(tabla, valor, valor2, valor3,descripcion,empr_id)&#xd;select tabla&#xd;, valor&#xd;, valor2&#xd;, valor3&#xd;, descripcion&#xd;,case when empr_id is null or empr_id='' then null else cast(empr_id as integer) end&#xd;from&#xd;(select&#xd;:tabla tabla&#xd;,:valor valor&#xd;,:valor2 valor2&#xd;,:valor3 valor3&#xd;,:descripcion descripcion&#xd;,:empr_id empr_id ) param&#xd;returning tabl_id</sql>
      <result outputType="json">{"respuesta":{"tabl_id":"$tabl_id"}}</result>
      <param name="tabla" sqlType="STRING"/>
      <param name="valor" sqlType="STRING"/>
      <param defaultValue="#{NULL}" name="valor2" optional="true" sqlType="STRING"/>
      <param defaultValue="#{NULL}" name="valor3" optional="true" sqlType="STRING"/>
      <param name="descripcion" sqlType="STRING"/>
      <param defaultValue="#{NULL}" name="empr_id" optional="true" sqlType="STRING"/>
   </query>
   <query id="validaBPMCaseYEmpr" useConfig="ToolsDataSource">
      <sql>select case_id&#xd;from core.case_empresa&#xd; where case_id = cast(:case_id as INTEGER) &#xd; and empr_id = cast(:empr_id as INTEGER)</sql>
      <result outputType="json">{"respuesta":{ "case_id":"$case_id" }}</result>
      <param name="case_id" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="getClientexEmpresayEstado" useConfig="ToolsDataSource">
      <sql>SELECT&#xd;  c.*,&#xd;  t.valor as tipo_cliente&#xd;FROM&#xd;  core.clientes c&#xd;  left join core.tablas t on t.tabl_id = c.ticl_id&#xd;WHERE&#xd;  c.empr_id = CAST(:empr_id AS INTEGER)&#xd;  and c.estado = :estado&#xd;order by&#xd;  c.clie_id ASC</sql>
      <result outputType="json">{&#xd; "cliente":{&#xd;   "clientes":[&#xd;     {&#xd;      "clie_id":"$clie_id",&#xd;      "nombre":"$nombre",&#xd;      "dir_entrega":"$dir_entrega",&#xd;      "observaciones":"$observaciones",&#xd;      "ticl_id":"$ticl_id",&#xd;      "estado":"$estado",&#xd;      "tipo_cliente":"$tipo_cliente"&#xd;     }&#xd;   ]&#xd;  }&#xd;}</result>
      <param name="empr_id" sqlType="STRING"/>
      <param name="estado" sqlType="STRING"/>
   </query>
   <query id="getEquiposXSector" useConfig="ToolsDataSource">
      <sql>select * from core.equipos where sect_id = :sect_id</sql>
      <result outputType="json">{&#xd;  "equipos": {&#xd;    "equipo": [&#xd;      {&#xd;        "equi_id" : "$equi_id",&#xd;        "descripcion": "$descripcion",&#xd;        "marca": "$marca",&#xd;        "codigo": "$codigo",&#xd;        "ubicacion": "$ubicacion",&#xd;        "estado": "$estado",&#xd;        "fecha_ultimalectura": "$fecha_ultimalectura",&#xd;        "ultima_lectura": "$ultima_lectura",&#xd;        "tipo_horas": "$tipo_horas",&#xd;        "valor_reposicion": "$valor_reposicion",&#xd;        "fecha_reposicion": "$fecha_reposicion",&#xd;        "valor": "$valor",&#xd;        "comprobante": "$comprobante",&#xd;        "descrip_tecnica": "$descrip_tecnica",&#xd;        "numero_serie": "$numero_serie",&#xd;        "adjunto": "$adjunto",&#xd;        "meta_disponibilidad": "$meta_disponibilidad",&#xd;        "fecha_ingreso": "$fecha_ingreso",&#xd;        "fecha_baja": "$fecha_baja",&#xd;        "fecha_garantia": "$fecha_garantia",&#xd;        "prov_id": "$prov_id",&#xd;        "empr_id": "$empr_id",&#xd;        "sect_id": "$sect_id",&#xd;        "ubic_id": "$ubic_id",&#xd;        "grup_id": "$grup_id",&#xd;        "crit_id": "$crit_id",&#xd;        "unme_id": "$unme_id",&#xd;        "area_id": "$area_id",&#xd;        "proc_id": "$proc_id"&#xd;      }&#xd;    ]&#xd;  }&#xd;}&#xd;</result>
      <param name="sect_id" sqlType="STRING"/>
   </query>
   <query id="setCliente" useConfig="ToolsDataSource">
      <sql>INSERT INTO&#xd;  core.clientes (&#xd;    nombre,&#xd;    dir_entrega,&#xd;    observaciones,&#xd;    usuario_app,&#xd;    ticl_id,&#xd;    empr_id&#xd;  )&#xd;VALUES(&#xd;    :nombre,&#xd;    :dir_entrega,&#xd;    :observaciones,&#xd;    :usuario_app,&#xd;    :ticl_id,&#xd;    cast(:empr_id as integer)&#xd;  )</sql>
      <param name="nombre" sqlType="STRING"/>
      <param name="dir_entrega" sqlType="STRING"/>
      <param name="observaciones" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="ticl_id" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="updateCliente" useConfig="ToolsDataSource">
      <sql>UPDATE core.clientes&#xd;SET &#xd;nombre=:nombre,&#xd;dir_entrega=:dir_entrega, observaciones=:observaciones, usuario_app=:usuario_app, ticl_id=:ticl_id&#xd;WHERE clie_id=cast(:clie_id as integer) ;</sql>
      <param name="dir_entrega" sqlType="STRING"/>
      <param name="observaciones" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="ticl_id" sqlType="STRING"/>
      <param name="clie_id" sqlType="STRING"/>
      <param name="nombre" sqlType="STRING"/>
   </query>
   <query id="deleteCliente" useConfig="ToolsDataSource">
      <sql>UPDATE core.clientes&#xd;SET estado='ELIMINADO'&#xd;WHERE clie_id=cast(:clie_id as integer) ;</sql>
      <param name="clie_id" sqlType="STRING"/>
   </query>
   <query id="getUsersXGroup" useConfig="ToolsDataSource">
      <sql>select distinct(U.id), U.first_name, U.last_name, U.usernick &#xd;from seg.users U&#xd;, seg.memberships_users MU&#xd;, core.empresas e &#xd;where U.email = MU.email&#xd;and MU.group = e.descripcion &#xd;and e.empr_id = cast(:group as integer)</sql>
      <result outputType="json">{&#xd;    "usuarios":{&#xd;                    "usuario": [&#xd;                      {&#xd;                        "id": "$id",&#xd;                        "first_name": "$first_name",&#xd;                        "last_name": "$last_name",&#xd;                        "usernick": "$usernick"&#xd;                      }&#xd;                    ]&#xd;    }&#xd;}</result>
      <param name="group" sqlType="STRING"/>
   </query>
   <query id="getCliente" useConfig="ToolsDataSource">
      <sql>select&#xd;	c.clie_id ,&#xd;	c.nombre,&#xd;	c.dir_entrega,&#xd;	c.observaciones ,&#xd;	t.valor tipo_cliente,&#xd;	estado,&#xd;	to_char( c.fec_alta, 'YYYY-MM-DD HH24:MI') fec_alta&#xd;from&#xd;	core.clientes c ,&#xd;	core.tablas t&#xd;where&#xd;	t.tabl_id = c.ticl_id&#xd;	and c.clie_id = cast(:clie_id as integer)</sql>
      <result outputType="json">{&#xd;   "cliente":{&#xd;      "clie_id":"$clie_id",&#xd;      "nombre":"$nombre",&#xd;      "dir_entrega":"$dir_entrega",&#xd;      "observaciones":"$observaciones",&#xd;      "tipo_cliente":"$tipo_cliente",&#xd;      "estado":"$estado",&#xd;      "fec_alta":"$fec_alta"&#xd;   }&#xd;}</result>
      <param name="clie_id" sqlType="STRING"/>
   </query>
   <query id="getTablaXEmpresa" useConfig="ToolsDataSource">
      <sql>select&#xd;	t.*&#xd;from&#xd;	core.tablas t ,&#xd;	(select :empr_id empr_id,:tabla tabla) param&#xd;where&#xd;	t.tabla = case when param.empr_id is null or param.empr_id = '' then param.tabla else param.empr_id ||'-'||param.tabla end&#xd;and t.eliminado = false</sql>
      <result outputType="json">{&#xd;    "tablas":{&#xd;        "tabla":[&#xd;            {&#xd;                "tabl_id":"$tabl_id",&#xd;                "valor":"$valor",&#xd;                "valor2":"$valor2",&#xd;                "valor3":"$valor3",&#xd;                "descripcion":"$descripcion"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="empr_id" optional="false" sqlType="STRING"/>
      <param name="tabla" sqlType="STRING"/>
   </query>
   <query id="getListaTablasXEmpresa" useConfig="ToolsDataSource">
      <sql>select distinct tab.tabla &#xd;from &#xd;(select&#xd;    case when param.empr_id is null or param.empr_id = '' &#xd;    then t.tabla &#xd;    else  substring(t.tabla from '^[0-9]*-(.*)?') end  as tabla&#xd;from&#xd;	core.tablas t ,&#xd;	( select :empr_id empr_id) param&#xd;where&#xd;	(t.empr_id is null&#xd;		and (param.empr_id is null&#xd;		or param.empr_id = ''))&#xd;	or t.empr_id =&#xd;	case&#xd;		when param.empr_id is null&#xd;		or param.empr_id = '' &#xd;		then t.empr_id&#xd;		else cast(param.empr_id as integer) &#xd;		end) tab&#xd;order by 1</sql>
      <result outputType="json">{&#xd;   "tablas":{&#xd;      "tabla":[&#xd;         {&#xd;            "tabla":"$tabla"&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="empr_id" optional="false" sqlType="STRING"/>
   </query>
   <query id="updateTablas" useConfig="ToolsDataSource">
      <sql>update core.tablas &#xd;set valor=:valor &#xd;,valor2 =:valor2 &#xd;,valor3=:valor3 &#xd;,descripcion =:descripcion &#xd;where tabl_id=:tabl_id</sql>
      <param name="valor" sqlType="STRING"/>
      <param name="valor2" sqlType="STRING"/>
      <param name="valor3" sqlType="STRING"/>
      <param name="descripcion" sqlType="STRING"/>
      <param name="tabl_id" sqlType="STRING"/>
   </query>
   <query id="deleteTablas" useConfig="ToolsDataSource">
      <sql>update core.tablas &#xd;set eliminado = true&#xd;where tabl_id=:tabl_id</sql>
      <param name="tabl_id" sqlType="STRING"/>
   </query>
   <query id="getEstados" useConfig="ToolsDataSource">
      <sql>select t.tabl_id, t.valor&#xd;from core.tablas t&#xd;where t.tabla = concat('estados_paises', :pais)&#xd;and eliminado = false</sql>
      <result outputType="json">{&#xd;   "estados": {&#xd;      "estado": [&#xd;        {&#xd;          "tabl_id": "$tabl_id",&#xd;          "valor": "$valor"&#xd;        }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="pais" sqlType="STRING"/>
   </query>
   <query id="getLocalidades" useConfig="ToolsDataSource">
      <sql>select t.tabl_id, t.valor&#xd;from core.tablas t&#xd;where t.tabla = concat('localidades_estados_paises', :pais, :estado)&#xd;and eliminado = false</sql>
      <result outputType="json">{&#xd;   "localidades": {&#xd;      "localidad": [&#xd;        {&#xd;          "tabl_id": "$tabl_id",&#xd;          "valor": "$valor"&#xd;        }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="pais" sqlType="STRING"/>
      <param name="estado" sqlType="STRING"/>
   </query>
   <query id="getPaises" useConfig="ToolsDataSource">
      <sql>select tabl_id, valor&#xd;from core.tablas&#xd;where tabla = 'paises' and eliminado = false</sql>
      <result outputType="json">{&#xd;   "paises": {&#xd;      "pais": [&#xd;        {&#xd;          "tabl_id": "$tabl_id",&#xd;          "valor": "$valor"&#xd;        }&#xd;      ]&#xd;   }&#xd;}</result>
   </query>
   <query id="setCaseEmpresa" useConfig="ToolsDataSource">
      <sql>insert into core.case_empresa &#xd;(case_id&#xd;,empr_id)&#xd;values &#xd;(cast(:case_id as INTEGER)&#xd;,cast(:empr_id as INTEGER))</sql>
      <param name="case_id" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="setEstablecimiento" useConfig="ToolsDataSource">
      <sql>insert into prd.establecimientos (&#xd;	nombre, &#xd;	calle,&#xd;	altura,&#xd;	pais,&#xd;	estado,&#xd;	localidad,&#xd;    empr_id )&#xd;select&#xd;  	:nombre, &#xd;  	:calle, &#xd;  	:altura,&#xd;  	CASE WHEN param.pais IS NULL OR param.pais='' THEN NULL ELSE param.pais end,&#xd;  	CASE WHEN param.estado IS NULL OR param.estado ='' THEN NULL ELSE param.estado end,&#xd;  	CASE WHEN param.localidad IS NULL OR param.localidad ='' THEN NULL ELSE param.localidad end,&#xd;  	cast(:empr_id as integer)&#xd;FROM (select&#xd;  	:pais pais,&#xd;  	:estado estado,&#xd;  	:localidad localidad) param</sql>
      <param name="nombre" sqlType="STRING"/>
      <param name="calle" sqlType="STRING"/>
      <param name="altura" sqlType="STRING"/>
      <param name="pais" sqlType="STRING"/>
      <param name="estado" sqlType="STRING"/>
      <param name="localidad" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="updateEstablecimiento" useConfig="ToolsDataSource">
      <sql>UPDATE prd.establecimientos&#xd;set nombre = :nombre,&#xd;    calle = :calle,&#xd;    altura = :altura,&#xd;    pais = CASE WHEN param.pais IS NULL OR param.pais='' THEN NULL ELSE param.pais end,&#xd;    estado = CASE WHEN param.estado IS NULL OR param.estado='' THEN NULL ELSE param.estado end,&#xd;    localidad = CASE WHEN param.localidad IS NULL OR param.localidad ='' THEN NULL ELSE param.localidad end&#xd;FROM (select&#xd;  	:pais pais,&#xd;  	:estado estado,&#xd;  	:localidad localidad) param&#xd;where esta_id = CAST(:esta_id as integer)</sql>
      <param name="nombre" sqlType="STRING"/>
      <param name="calle" sqlType="STRING"/>
      <param name="altura" sqlType="STRING"/>
      <param name="localidad" sqlType="STRING"/>
      <param name="estado" sqlType="STRING"/>
      <param name="pais" sqlType="STRING"/>
      <param name="esta_id" sqlType="STRING"/>
   </query>
   <query id="deleteEstablecimiento" useConfig="ToolsDataSource">
      <sql>UPDATE prd.establecimientos&#xd;SET eliminado = TRUE&#xd;WHERE esta_id = cast(:esta_id as integer) ;</sql>
      <param name="esta_id" sqlType="STRING"/>
   </query>
   <query id="getDepositoPorEstablecimiento" useConfig="ToolsDataSource">
      <sql>select de.depo_id ,de.descripcion, de.nombre&#xd;from alm.alm_depositos de &#xd;WHERE de.esta_id = cast(:esta_id as integer)&#xd;and de.empr_id = cast(:empr_id as integer)&#xd;and de.eliminado = false</sql>
      <result outputType="json">{&#xd;    "depositos": {&#xd;        "deposito": [&#xd;            {&#xd;                "depo_id": "$depo_id",&#xd;                "descripcion": "$descripcion",&#xd;                "nombre": "$nombre",&#xd;                "@getDepositoEncargados": "$depo_id-&gt;depo_id"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="empr_id" sqlType="STRING"/>
      <param name="esta_id" sqlType="STRING"/>
   </query>
   <query id="deleteDeposito" useConfig="ToolsDataSource">
      <sql>delete &#xd;from alm.alm_depositos&#xd;where depo_id = cast(:depo_id as integer);</sql>
      <param name="depo_id" sqlType="STRING"/>
   </query>
   <query id="setDepositoPorEstablecimiento" useConfig="ToolsDataSource">
      <sql>insert into alm.alm_depositos&#xd;(&#xd;    descripcion, &#xd;    empr_id, &#xd;    esta_id,&#xd;    nombre&#xd;)&#xd;VALUES(&#xd;    :descripcion,&#xd;    cast(:empr_id as integer),&#xd;    cast(:esta_id as integer),&#xd;    :nombre&#xd;)&#xd;returning depo_id;</sql>
      <result outputType="json">{"respuesta":{"depo_id":"$depo_id"}}</result>
      <param name="descripcion" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="esta_id" sqlType="STRING"/>
      <param name="nombre" sqlType="STRING"/>
   </query>
   <query id="getEstablecimientos" useConfig="ToolsDataSource">
      <sql>select e.esta_id, e.nombre, e.calle, e.altura, tl.valor as localidad, tl.tabl_id as localidad_id, te.valor as estado, te.tabl_id as estado_id, tp.valor as pais, tp.tabl_id as pais_id&#xd;from prd.establecimientos e&#xd;left join core.tablas tl&#xd;on tl.tabl_id = e.localidad &#xd;left join core.tablas te &#xd;on te.tabl_id = e.estado &#xd;left join core.tablas tp &#xd;on tp.tabl_id = e.pais &#xd;where e.empr_id = cast (:empr_id as integer)&#xd;and e.eliminado = false;</sql>
      <result outputType="json">{&#xd;   "establecimientos": {&#xd;      "establecimiento": [&#xd;        {&#xd;          "esta_id": "$esta_id",&#xd;          "nombre": "$nombre",&#xd;          "calle": "$calle",&#xd;          "altura": "$altura",&#xd;          "localidad": "$localidad",&#xd;          "localidad_id": "$localidad_id",&#xd;          "estado": "$estado",&#xd;          "estado_id": "$estado_id",&#xd;          "pais": "$pais",&#xd;          "pais_id": "$pais_id"&#xd;        }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="setTransportista" useConfig="ToolsDataSource">
      <sql>insert into core.transportistas &#xd;(&#xd;cuit, &#xd;razon_social,&#xd;telefono,&#xd;email,&#xd;direccion,&#xd;pais_id,&#xd;prov_id,&#xd;loca_id,&#xd;tipo_transporte,&#xd;observaciones,&#xd;empr_id&#xd;) &#xd;values(&#xd;:cuit, &#xd;:razon_social,&#xd;:telefono,&#xd;:email,&#xd;:direccion,&#xd;:pais_id,&#xd;:prov_id,&#xd;:loca_id,&#xd;:tipo_transporte,&#xd;:observaciones,&#xd;cast(:empr_id as integer)&#xd;);</sql>
      <param name="cuit" sqlType="STRING"/>
      <param name="razon_social" sqlType="STRING"/>
      <param name="direccion" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="telefono" sqlType="STRING"/>
      <param name="email" sqlType="STRING"/>
      <param name="pais_id" sqlType="STRING"/>
      <param name="prov_id" sqlType="STRING"/>
      <param name="loca_id" sqlType="STRING"/>
      <param name="tipo_transporte" sqlType="STRING"/>
      <param name="observaciones" sqlType="STRING"/>
   </query>
   <query id="updateTransportista" useConfig="ToolsDataSource">
      <sql>UPDATE &#xd;  core.transportistas &#xd;SET &#xd;  cuit = :cuit, &#xd;  razon_social = :razon_social, &#xd;  direccion = :direccion, &#xd;  telefono = :telefono, &#xd;  email = :email, &#xd;  pais_id = :pais_id, &#xd;  prov_id = :prov_id, &#xd;  loca_id = :loca_id, &#xd;  tipo_transporte = :tipo_transporte, &#xd;  observaciones = :observaciones, &#xd;  empr_id = cast(:empr_id as integer)&#xd;WHERE &#xd;  tran_id = cast(:tran_id as integer)</sql>
      <param name="razon_social" sqlType="STRING"/>
      <param name="direccion" sqlType="STRING"/>
      <param name="cuit" sqlType="STRING"/>
      <param name="telefono" sqlType="STRING"/>
      <param name="email" sqlType="STRING"/>
      <param name="pais_id" sqlType="STRING"/>
      <param name="prov_id" sqlType="STRING"/>
      <param name="loca_id" sqlType="STRING"/>
      <param name="tipo_transporte" sqlType="STRING"/>
      <param name="observaciones" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="tran_id" sqlType="STRING"/>
   </query>
   <query id="deleteTransportista" useConfig="ToolsDataSource">
      <sql>UPDATE core.transportistas &#xd;SET eliminado = TRUE&#xd;WHERE tran_id = cast(:tran_id as integer);</sql>
      <param name="tran_id" sqlType="STRING"/>
   </query>
   <query id="getEmpresas" useConfig="ToolsDataSource">
      <sql>select&#xd;   e.*,&#xd;   tl.valor as localidad,&#xd;   te.valor as estado,&#xd;   tp.valor as pais&#xd;from&#xd;   core.empresas e &#xd;   left join&#xd;      core.tablas tl &#xd;      on tl.tabl_id = e.loca_id &#xd;   left join&#xd;      core.tablas te &#xd;      on te.tabl_id = e.prov_id &#xd;   left join&#xd;      core.tablas tp &#xd;      on tp.tabl_id = e.pais_id&#xd;order by e.empr_id ASC</sql>
      <result outputType="json">{&#xd;    "empresas":{&#xd;        "empresa":[&#xd;            {&#xd;                "empr_id":"$empr_id",&#xd;                "nombre":"$nombre",&#xd;                "descripcion":"$descripcion",&#xd;                "cuit":"$cuit",&#xd;                "telefono":"$telefono",&#xd;                "email":"$email",&#xd;                "pais_id":"$pais_id",&#xd;                "prov_id":"$prov_id",&#xd;                "loca_id":"$loca_id",&#xd;                "image":"$image",&#xd;                "imagepath":"$imagepath",&#xd;                "localidad": "$localidad",&#xd;                "estado": "$estado",&#xd;                "pais": "$pais"&#xd;            }&#xd;        ]&#xd;    }&#xd;}&#xd;</result>
   </query>
   <query id="encargadoXPanolGet" useConfig="ToolsDataSource">
      <sql>select U.id, U.first_name, U.last_name&#xd;FROM seg.users U, pan.encargado_panol E&#xd;WHERE&#xd;E.user_id = U.id&#xd;and U.status = 'approved' &#xd;and U.banned_users = 'unban' &#xd;and E.pano_id = CAST(:pano_id AS INTEGER);</sql>
      <result outputType="json">{&#xd;    "users":{&#xd;      "user":[&#xd;        {&#xd;          "id": "$id",&#xd;          "first_name": "$first_name",&#xd;          "last_name": "$last_name"&#xd;        }&#xd;      ]&#xd;    }&#xd;}</result>
   </query>
   <query id="getEnvasesXEmpresa" useConfig="ToolsDataSource">
      <sql>select p.*, t.descripcion as unme_id, f.descripcion as nombre_receta from prd.empaque p&#xd;left join core.tablas t on t.tabl_id = p.unidad_medida&#xd;left join prd.formulas f on f.form_id = p.receta&#xd;where p.empr_id = cast(:empr_id as Integer)&#xd;and p.eliminado = false</sql>
      <result outputType="json">{&#xd; "envase":{&#xd;   "envases":[&#xd;     {&#xd;      "empa_id":"$empa_id",&#xd;      "nombre":"$nombre",&#xd;      "unidad_medida":"$unme_id",&#xd;      "capacidad":"$capacidad",&#xd;      "empr_id":"$empr_id",&#xd;      "usuario_app":"$usuario_app",&#xd;      "fech_alta":"$fech_alta",&#xd;      "tara":"$tara",&#xd;      "arti_id":"$arti_id",&#xd;      "receta":"$nombre_receta",&#xd;      "descripcion":"$descripcion"&#xd;     }&#xd;   ]&#xd;  }&#xd;}</result>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="getUnidadesMedidas" useConfig="ToolsDataSource">
      <sql>select tabl_id, valor&#xd;from core.tablas&#xd;where tabla = 'unidades_medida' and eliminado = false</sql>
      <result outputType="json">{&#xd;  "unidades": {&#xd;     "unidad": [&#xd;       {&#xd;         "tabl_id": "$tabl_id",&#xd;         "valor": "$valor"&#xd;       }&#xd;     ]&#xd;  }&#xd;}</result>
   </query>
   <query id="setEnvase" useConfig="ToolsDataSource">
      <sql>insert into prd.empaque&#xd;(&#xd;    nombre,&#xd;    descripcion,&#xd;    unidad_medida,&#xd;    capacidad,&#xd;    empr_id, &#xd;    usuario_app,&#xd;    tara,&#xd;    receta,&#xd;    eliminado)&#xd;VALUES(&#xd;    :nombre,&#xd;    :descripcion,&#xd;    :unidad_medida,&#xd;    cast(:capacidad as float),&#xd;    cast(:empr_id as integer),&#xd;    :usuario_app,&#xd;    cast(:tara as float),&#xd;    cast(:receta as integer),&#xd;    False&#xd;);</sql>
      <param name="nombre" sqlType="STRING"/>
      <param name="descripcion" sqlType="STRING"/>
      <param name="unidad_medida" sqlType="STRING"/>
      <param name="capacidad" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="tara" sqlType="STRING"/>
      <param name="receta" sqlType="STRING"/>
   </query>
   <query id="deleteEnvase" useConfig="ToolsDataSource">
      <sql>UPDATE prd.empaque &#xd;SET eliminado = TRUE&#xd;WHERE empa_id = cast(:empa_id as integer);</sql>
      <param name="empa_id" sqlType="STRING"/>
   </query>
   <query id="updateEnvase" useConfig="ToolsDataSource">
      <sql>update prd.empaque&#xd;set &#xd;    nombre = :nombre,&#xd;    descripcion = :descripcion,&#xd;    unidad_medida = :unidad_medida,&#xd;    capacidad = cast(:capacidad as float),&#xd;    tara = cast(:tara as float),&#xd;    receta = :receta&#xd;where empa_id = CAST(:empa_id as integer);</sql>
      <param name="nombre" sqlType="STRING"/>
      <param name="descripcion" sqlType="STRING"/>
      <param name="unidad_medida" sqlType="STRING"/>
      <param name="capacidad" sqlType="STRING"/>
      <param name="tara" sqlType="STRING"/>
      <param name="receta" sqlType="STRING"/>
      <param name="empa_id" sqlType="STRING"/>
   </query>
   <query id="getEquiposxEmpresa" useConfig="ToolsDataSource">
      <sql>select *&#xd;from core.equipos e &#xd;where e.empr_id = cast(:empr_id as integer)&#xd;and e.eliminado = false</sql>
      <result outputType="json">{&#xd;  "equipos": {&#xd;    "equipo": [&#xd;      {&#xd;        "equi_id" : "$equi_id",&#xd;        "descripcion": "$descripcion",&#xd;        "marca": "$marca",&#xd;        "codigo": "$codigo",&#xd;        "ubicacion": "$ubicacion",&#xd;        "estado": "$estado",&#xd;        "fecha_ultimalectura": "$fecha_ultimalectura",&#xd;        "ultima_lectura": "$ultima_lectura",&#xd;        "tipo_horas": "$tipo_horas",&#xd;        "valor_reposicion": "$valor_reposicion",&#xd;        "fecha_reposicion": "$fecha_reposicion",&#xd;        "valor": "$valor",&#xd;        "comprobante": "$comprobante",&#xd;        "descrip_tecnica": "$descrip_tecnica",&#xd;        "numero_serie": "$numero_serie",&#xd;        "adjunto": "$adjunto",&#xd;        "meta_disponibilidad": "$meta_disponibilidad",&#xd;        "fecha_ingreso": "$fecha_ingreso",&#xd;        "fecha_baja": "$fecha_baja",&#xd;        "fecha_garantia": "$fecha_garantia",&#xd;        "prov_id": "$prov_id",&#xd;        "empr_id": "$empr_id",&#xd;        "sect_id": "$sect_id",&#xd;        "ubic_id": "$ubic_id",&#xd;        "grup_id": "$grup_id",&#xd;        "crit_id": "$crit_id",&#xd;        "unme_id": "$unme_id",&#xd;        "area_id": "$area_id",&#xd;        "proc_id": "$proc_id",&#xd;        "activos_id": "$activos_id"&#xd;      }&#xd;    ]&#xd;  }&#xd;}</result>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="setEquipo" useConfig="ToolsDataSource">
      <sql>insert into core.equipos&#xd;(&#xd;    descripcion,&#xd;    sect_id,&#xd;    area_id,&#xd;    codigo, &#xd;    grup_id,&#xd;    unme_id,&#xd;    marca,&#xd;    numero_serie, &#xd;    crit_id,&#xd;    fecha_ingreso,&#xd;    fecha_garantia,&#xd;    ubicacion,&#xd;    descrip_tecnica,&#xd;    estado,&#xd;    fecha_ultimalectura,&#xd;    ultima_lectura,&#xd;    activos_id,&#xd;    empr_id)&#xd;VALUES(&#xd;    :descripcion,&#xd;    :sect_id,&#xd;    :area_id,&#xd;    :codigo,&#xd;    cast(:grup_id as integer),&#xd;    :unme_id,&#xd;    :marca,&#xd;    cast(:numero_serie as float),&#xd;    :crit_id,&#xd;    TO_DATE(:fecha_ingreso, 'YYYY-MM-DD'),&#xd;    TO_DATE(:fecha_garantia, 'YYYY-MM-DD'),&#xd;    :ubicacion,&#xd;    :descrip_tecnica,&#xd;    :estado,&#xd;    TO_DATE(:fecha_ultimalectura, 'YYYY-MM-DD'),&#xd;    cast(:ultima_lectura as float),&#xd;    :activos_id,&#xd;    cast(:empr_id as integer)&#xd;);</sql>
      <param name="descripcion" sqlType="STRING"/>
      <param name="sect_id" sqlType="STRING"/>
      <param name="area_id" sqlType="STRING"/>
      <param name="codigo" sqlType="STRING"/>
      <param name="grup_id" sqlType="STRING"/>
      <param name="unme_id" sqlType="STRING"/>
      <param name="marca" sqlType="STRING"/>
      <param name="numero_serie" sqlType="STRING"/>
      <param name="crit_id" sqlType="STRING"/>
      <param name="fecha_ingreso" sqlType="STRING"/>
      <param name="fecha_garantia" sqlType="STRING"/>
      <param name="ubicacion" sqlType="STRING"/>
      <param name="descrip_tecnica" sqlType="STRING"/>
      <param name="estado" sqlType="STRING"/>
      <param name="fecha_ultimalectura" sqlType="STRING"/>
      <param name="ultima_lectura" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="activos_id" sqlType="STRING"/>
   </query>
   <query id="deleteEquipo" useConfig="ToolsDataSource">
      <sql>UPDATE core.equipos &#xd;SET eliminado = TRUE&#xd;WHERE equi_id = cast(:equi_id as integer);</sql>
      <param name="equi_id" sqlType="STRING"/>
   </query>
   <query id="setEmpresa" returnGeneratedKeys="true" useConfig="ToolsDataSource">
      <sql>insert into core.empresas&#xd;(&#xd;    nombre,&#xd;    cuit,&#xd;    descripcion,&#xd;    telefono,&#xd;    email,&#xd;    pais_id, &#xd;    prov_id,&#xd;    loca_id,&#xd;    imagepath,&#xd;    image&#xd;)&#xd;VALUES(&#xd;    :nombre,&#xd;    :cuit,&#xd;    :descripcion,&#xd;    :telefono,&#xd;    :email,&#xd;    :pais_id,&#xd;    :prov_id,&#xd;    :loca_id,&#xd;    :imagepath,&#xd;    :image&#xd;);</sql>
      <result element="GeneratedKeys" rowName="Entry" useColumnNumbers="true">
         <element column="1" name="ID" xsdType="integer"/>
      </result>
      <param name="nombre" sqlType="STRING"/>
      <param name="cuit" sqlType="STRING"/>
      <param name="descripcion" sqlType="STRING"/>
      <param name="telefono" sqlType="STRING"/>
      <param name="email" sqlType="STRING"/>
      <param name="pais_id" sqlType="STRING"/>
      <param name="prov_id" sqlType="STRING"/>
      <param name="loca_id" sqlType="STRING"/>
      <param name="imagepath" sqlType="STRING"/>
      <param name="image" optional="false" sqlType="BINARY"/>
   </query>
   <query id="deleteEmpresa" useConfig="ToolsDataSource">
      <sql>UPDATE core.empresas &#xd;SET eliminado = TRUE&#xd;WHERE empr_id = cast(:empr_id as integer);</sql>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="getDepositosxEncargado" useConfig="ToolsDataSource">
      <sql>select ad.depo_id,&#xd;ad.descripcion,&#xd;u.id as user_id,&#xd;CASE WHEN u.id IS NULL THEN '' ELSE u.first_name || ' '|| u.last_name END responsable&#xd;from alm.alm_depositos ad &#xd;left join core.encargados_depositos ed on ed.depo_id = ad.depo_id &#xd;left join seg.users u on u.id = ed.user_id&#xd;where u.id = cast(:user_id as integer)</sql>
      <result outputType="json">{&#xd;    "encargados": {&#xd;        "depositos": [&#xd;            {&#xd;                "depo_id": "$depo_id",&#xd;                "descripcion": "$descripcion",&#xd;                "responsable": "$responsable",&#xd;                "user_id": "$user_id"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="user_id" sqlType="STRING"/>
   </query>
   <query id="setEncargadoDeposito" useConfig="ToolsDataSource">
      <sql>insert into core.encargados_depositos &#xd;(&#xd;    depo_id, &#xd;    user_id&#xd;)&#xd;VALUES(&#xd;    cast(:depo_id as integer),&#xd;    cast(:user_id as integer)&#xd;);</sql>
      <param name="depo_id" sqlType="STRING"/>
      <param name="user_id" sqlType="STRING"/>
   </query>
   <query id="updateDepositoPorEstablecimiento" useConfig="ToolsDataSource">
      <sql>update alm.alm_depositos set descripcion = :descripcion,&#xd;    empr_id = cast(:empr_id as integer), &#xd;    esta_id = cast(:esta_id as integer),&#xd;    nombre = :nombre&#xd;where depo_id = cast(:depo_id as integer)</sql>
      <param name="descripcion" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="esta_id" sqlType="STRING"/>
      <param name="depo_id" sqlType="STRING"/>
      <param name="nombre" sqlType="STRING"/>
   </query>
   <query id="getDepositoEncargados" useConfig="ToolsDataSource">
      <sql>select ad.depo_id,&#xd;ad.descripcion,&#xd;u.id as user_id,&#xd;CASE WHEN u.id IS NULL THEN '' ELSE u.first_name || ' '|| u.last_name END encargado&#xd;from alm.alm_depositos ad &#xd;left join core.encargados_depositos ed on ed.depo_id = ad.depo_id &#xd;left join seg.users u on u.id = ed.user_id&#xd;where ad.depo_id  = cast(:depo_id as integer)</sql>
      <result outputType="json">{&#xd;    "encargados": {&#xd;        "encargado": [&#xd;            {&#xd;                "user_id": "$user_id",&#xd;                "encargado": "$encargado"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="depo_id" sqlType="STRING"/>
   </query>
   <query id="deleteDepositoEncargados" useConfig="ToolsDataSource">
      <sql>delete from core.encargados_depositos ed &#xd;where depo_id = cast(:depo_id as integer)</sql>
      <param name="depo_id" sqlType="STRING"/>
   </query>
   <query id="getTransportistas" useConfig="ToolsDataSource">
      <sql>select&#xd;  t.tran_id,&#xd;  t.cuit,&#xd;  t.razon_social,&#xd;  t.direccion,&#xd;  t.telefono,&#xd;  t.email,&#xd;  t.tipo_transporte,&#xd;  t.observaciones,&#xd;  tp.valor as pais,&#xd;  tp.tabl_id as pais_id,&#xd;  te.valor as estado,&#xd;  te.tabl_id as prov_id,&#xd;  tl.valor as localidad,&#xd;  tl.tabl_id as loca_id&#xd;from&#xd;  core.transportistas t&#xd;  left join core.tablas tl on tl.tabl_id = t.loca_id&#xd;  left join core.tablas te on te.tabl_id = t.prov_id&#xd;  left join core.tablas tp on tp.tabl_id = t.pais_id&#xd;where&#xd;  t.eliminado = false&#xd;  and t.empr_id = cast(:empr_id as integer)&#xd;order by t.tran_id asc;</sql>
      <result outputType="json">{&#xd;   "transportistas": {&#xd;      "transportista": [&#xd;        {&#xd;          "tran_id": "$tran_id",&#xd;          "cuit": "$cuit",&#xd;          "razon_social": "$razon_social",&#xd;          "direccion": "$direccion",&#xd;          "telefono": "$telefono",&#xd;          "email": "$email",&#xd;          "tipo_transporte": "$tipo_transporte",&#xd;          "observaciones": "$observaciones",&#xd;          "pais": "$pais",&#xd;          "pais_id": "$pais_id",&#xd;          "estado": "$estado",&#xd;          "prov_id": "$prov_id",&#xd;          "localidad": "$localidad",&#xd;          "loca_id": "$loca_id"&#xd;        }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="validaBPMCaseYEmprAsset" useConfig="AssetPlannerDataSource">
      <sql>select case_id&#xd;from case_empresa&#xd; where case_id = cast(:case_id as INTEGER) &#xd; and empr_id = cast(:empr_id as INTEGER)</sql>
      <result outputType="json">{"respuesta":{ "case_id":"$case_id" }}</result>
      <param name="case_id" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="getTransportistasCuit" useConfig="ToolsDataSource">
      <sql>SELECT tran_id, cuit FROM core.transportistas where cuit like :cuit</sql>
      <result outputType="json">{&#xd;    "transportistas": {&#xd;        "transportista": [&#xd;            {&#xd;                "tran_id": "$tran_id",&#xd;                "cuit": "$cuit"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="cuit" sqlType="STRING"/>
   </query>
   <query id="setUserAsset" useConfig="AssetPlannerDataSource">
      <sql>INSERT into sisusers(usrNick, usrName, usrLastName, usrPassword, usrimag) &#xd;values (:nick, :name, :lastName, :pass, :image)</sql>
      <param name="nick" sqlType="STRING"/>
      <param name="name" sqlType="STRING"/>
      <param name="lastName" sqlType="STRING"/>
      <param name="pass" sqlType="STRING"/>
      <param name="image" sqlType="STRING"/>
   </query>
   <query id="getListasPrecios" useConfig="ToolsDataSource">
      <sql>SELECT lp.lipr_id, lp.nombre, lp.detalle, lp.tipo, lp.tipo, lp.empr_id, to_char(lp.fec_alta, 'YYYY-MM-DD HH24:MI') fec_alta, lp.usr_alta, lp.usr_app_alta, to_char(lp.fec_ult_modif,'YYYY-MM-DD HH24:MI') fec_ult_modif, lp.usr_ult_modif, lp.usr_app_ult_modif&#xd;FROM core.listas_precios lp&#xd;WHERE lp.empr_id = CAST(:empr_id AS INTEGER)&#xd;ORDER BY lp.nombre ASC;</sql>
      <result outputType="json">{&#xd;   "listas": {&#xd;      "lista": [&#xd;        {&#xd;          "lipr_id": "$lipr_id",&#xd;          "nombre": "$nombre",&#xd;          "detalle": "$detalle",&#xd;          "tipo": "$tipo",&#xd;          "empr_id": "$empr_id",&#xd;          "fec_alta": "$fec_alta",&#xd;          "usr_alta": "$usr_alta",&#xd;          "usr_app_alta": "$usr_app_alta",&#xd;          "fec_ult_modif": "$fec_ult_modif",&#xd;          "usr_ult_modif": "$usr_ult_modif",&#xd;          "usr_app_ult_modif": "$usr_app_ult_modif",&#xd;          "@getArticulosListaPrecios":"$lipr_id-&gt;lipr_id"&#xd;        }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="validaNombreListaPrecio" useConfig="ToolsDataSource">
      <sql>SELECT nombre&#xd;FROM core.listas_precios &#xd;WHERE nombre = :nombre&#xd;LIMIT 1;</sql>
      <result outputType="json">{&#xd;   "lista": {&#xd;      "nombre": "$nombre"&#xd;   }&#xd;}</result>
      <param name="nombre" sqlType="STRING"/>
   </query>
   <query id="setListaPrecio" useConfig="ToolsDataSource">
      <sql>INSERT INTO core.listas_precios&#xd;(&#xd;    nombre,&#xd;    tipo,&#xd;    detalle,&#xd;    empr_id,&#xd;    usr_alta,&#xd;    usr_app_alta,&#xd;    usr_ult_modif,&#xd;    usr_app_ult_modif,&#xd;    fec_ult_modif&#xd;)&#xd;VALUES (&#xd;    :nombre,&#xd;    :tipo,&#xd;    :detalle,&#xd;    cast(:empr_id as integer),&#xd;    :usr_alta,&#xd;    :usr_app_alta,&#xd;    :usr_ult_modif,&#xd;    :usr_app_ult_modif,&#xd;    TO_DATE(:fec_ult_modif, 'YYYY-MM-DD')&#xd;)returning lipr_id</sql>
      <result outputType="json">{&#xd;   "respuesta":{&#xd;       "lipr_id":"$lipr_id"&#xd;   }&#xd;}</result>
      <param name="nombre" sqlType="STRING"/>
      <param name="tipo" sqlType="STRING"/>
      <param name="detalle" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="usr_alta" sqlType="STRING"/>
      <param name="usr_app_alta" sqlType="STRING"/>
      <param name="usr_ult_modif" sqlType="STRING"/>
      <param name="usr_app_ult_modif" sqlType="STRING"/>
      <param name="fec_ult_modif" sqlType="STRING"/>
   </query>
   <query id="getUserByPhone" useConfig="ToolsDataSource">
      <sql>select&#xd;        id user_id,&#xd;	email correo,&#xd;	first_name nombre ,&#xd;	last_name apellido,&#xd;	"role" rol_seguridad,&#xd;	last_login ultimo_login,&#xd;	status estado ,&#xd;	banned_users es_baneado,&#xd;	telefono telefono,&#xd;	dni documento,&#xd;	usernick nick,&#xd;	u.depo_id,&#xd;	ad.nombre deposito,&#xd;	image imagen&#xd;from&#xd;	seg.users u&#xd;left join alm.alm_depositos ad on ad.depo_id = u.depo_id&#xd;where telefono = :phone_number&#xd;order by u.id desc -- HAY QUE MEJORAR Y VALIDAR POR EMPRESA&#xd;limit 1</sql>
      <result outputType="json">{&#xd;   "usuario":{&#xd;      "user_id":"$user_id",&#xd;      "correo":"$correo",&#xd;      "nombre":"$nombre",&#xd;      "apellido":"$apellido",&#xd;      "rol_seguridad":"$rol_seguridad",&#xd;      "ultimo_login":"$ultimo_login",&#xd;      "estado":"$estado",&#xd;      "es_baneado":"$es_baneado",&#xd;      "telefono":"$telefono",&#xd;      "documento":"$documento",&#xd;      "nick":"$nick",&#xd;      "depo_id":"$depo_id",&#xd;      "deposito":"$deposito",&#xd;      "imagen":"$imagen"&#xd;   }&#xd;}</result>
      <param name="phone_number" sqlType="STRING"/>
   </query>
   <query id="getUltimoListaPrecio" useConfig="ToolsDataSource">
      <sql>SELECT lipr_id &#xd;FROM core.listas_precios&#xd;WHERE empr_id = CAST(:empr_id AS INTEGER)&#xd;ORDER BY fec_alta DESC&#xd;LIMIT 1;</sql>
      <result outputType="json">{&#xd;   "lista": {&#xd;      "lipr_id": "$lipr_id"&#xd;   }&#xd;}</result>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="setVersionListaPrecio" useConfig="ToolsDataSource">
      <sql>INSERT INTO core.versiones_listas_precios &#xd;(&#xd;    lipr_id, &#xd;    nro_version, &#xd;    descripcion,&#xd;    usr_alta,&#xd;    usr_app_alta,&#xd;    usr_ult_modif,&#xd;    usr_app_ult_modif,&#xd;    fec_ult_modif&#xd;) &#xd;VALUES &#xd;(&#xd;    CAST(:lipr_id AS INTEGER), &#xd;    CAST(:nro_version AS INTEGER), &#xd;    :descripcion,&#xd;    :usr_alta,&#xd;    :usr_app_alta,&#xd;    :usr_ult_modif,&#xd;    :usr_app_ult_modif,&#xd;    TO_DATE(:fec_ult_modif, 'YYYY-MM-DD')&#xd;)returning velp_id;</sql>
      <result outputType="json">{&#xd;   "respuesta":{&#xd;       "velp_id":"$velp_id"&#xd;   }&#xd;}</result>
      <param name="lipr_id" sqlType="STRING"/>
      <param name="nro_version" sqlType="STRING"/>
      <param name="descripcion" sqlType="STRING"/>
      <param name="usr_alta" sqlType="STRING"/>
      <param name="usr_app_alta" sqlType="STRING"/>
      <param name="usr_ult_modif" sqlType="STRING"/>
      <param name="usr_app_ult_modif" sqlType="STRING"/>
      <param name="fec_ult_modif" sqlType="STRING"/>
   </query>
   <query id="setCostoRecurso" useConfig="ToolsDataSource">
      <sql>INSERT INTO core.costos_recursos&#xd;(&#xd;    recu_id,&#xd;    velp_id,&#xd;    precio&#xd;)&#xd;VALUES (&#xd;    cast(:recu_id as integer),&#xd;    cast(:velp_id as integer),&#xd;    cast(:precio as float)&#xd;);</sql>
      <param name="recu_id" sqlType="STRING"/>
      <param name="velp_id" sqlType="STRING"/>
      <param name="precio" sqlType="STRING"/>
   </query>
   <query id="getArticulosListaPrecios" useConfig="ToolsDataSource">
      <sql>select vlp.velp_id, vlp.nro_version, vlp.descripcion, cr.precio, cr.core_id, r.arti_id, aa.barcode, aa.descripcion as producto&#xd;from core.versiones_listas_precios vlp&#xd;left join core.costos_recursos cr on vlp.velp_id = cr.velp_id&#xd;left join prd.recursos r on r.recu_id = cr.recu_id &#xd;left join alm.alm_articulos aa on r.arti_id = aa.arti_id &#xd;where vlp.lipr_id = cast(:lipr_id as integer)</sql>
      <result outputType="json">{&#xd;  "detalles_lista_precio": {&#xd;    "detalle_lista_precio": [&#xd;      {&#xd;        "velp_id": "$velp_id",&#xd;        "nro_version": "$nro_version",&#xd;        "descripcion": "$descripcion",&#xd;        "precio": "$precio",&#xd;        "arti_id": "$arti_id",&#xd;        "barcode": "$barcode",&#xd;        "producto": "$producto",&#xd;        "core_id": "$core_id"&#xd;      }&#xd;    ]&#xd;  }&#xd;}</result>
      <param name="lipr_id" sqlType="STRING"/>
   </query>
   <resource method="GET" path="/menuitems/porEmail/{email}/porGrupo/{group}">
      <call-query href="getMenuByUserPermission">
         <with-param name="email" query-param="email"/>
         <with-param name="group" query-param="group"/>
      </call-query>
   </resource>
   <resource method="POST" path="/parametros">
      <call-query href="setParametro">
         <with-param name="tabla" query-param="tabla"/>
         <with-param name="valor" query-param="valor"/>
         <with-param name="descripcion" query-param="descripcion"/>
      </call-query>
   </resource>
   <resource method="GET" path="/parametros/{tabla}">
      <call-query href="getParametros">
         <with-param name="tabla" query-param="tabla"/>
      </call-query>
   </resource>
   <resource method="GET" path="/tablas/{tabla}">
      <call-query href="getTabla">
         <with-param name="tabla" query-param="tabla"/>
      </call-query>
   </resource>
   <resource method="POST" path="/snapshots">
      <call-query href="setSnapshot">
         <with-param name="data" query-param="data"/>
         <with-param name="clave" query-param="clave"/>
      </call-query>
   </resource>
   <resource method="GET" path="/snapshots/{clave}">
      <call-query href="getSnapshot">
         <with-param name="clave" query-param="clave"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/snapshots">
      <call-query href="delSnapshot">
         <with-param name="clave" query-param="clave"/>
      </call-query>
   </resource>
   <resource method="GET" path="/users">
      <call-query href="getUsers"/>
   </resource>
   <resource method="POST" path="/tablas">
      <call-query href="setTabla">
         <with-param name="tabla" query-param="tabla"/>
         <with-param name="valor" query-param="valor"/>
         <with-param name="valor2" query-param="valor2"/>
         <with-param name="valor3" query-param="valor3"/>
         <with-param name="descripcion" query-param="descripcion"/>
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/bandeja/linea/validar/case_id/{case_id}/empr_id/{empr_id}">
      <call-query href="validaBPMCaseYEmpr">
         <with-param name="case_id" query-param="case_id"/>
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/clientes/porEmpresa/{empr_id}/porEstado/{estado}">
      <call-query href="getClientexEmpresayEstado">
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="estado" query-param="estado"/>
      </call-query>
   </resource>
   <resource method="GET" path="/equipos/sector/{sect_id}">
      <call-query href="getEquiposXSector">
         <with-param name="sect_id" query-param="sect_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/cliente">
      <call-query href="setCliente">
         <with-param name="nombre" query-param="nombre"/>
         <with-param name="dir_entrega" query-param="dir_entrega"/>
         <with-param name="observaciones" query-param="observaciones"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="ticl_id" query-param="ticl_id"/>
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="PUT" path="/cliente">
      <call-query href="updateCliente">
         <with-param name="dir_entrega" query-param="dir_entrega"/>
         <with-param name="observaciones" query-param="observaciones"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="ticl_id" query-param="ticl_id"/>
         <with-param name="clie_id" query-param="clie_id"/>
         <with-param name="nombre" query-param="nombre"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/cliente">
      <call-query href="deleteCliente">
         <with-param name="clie_id" query-param="clie_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/users/{group}">
      <call-query href="getUsersXGroup">
         <with-param name="group" query-param="group"/>
      </call-query>
   </resource>
   <resource method="GET" path="/cliente/{clie_id}">
      <call-query href="getCliente">
         <with-param name="clie_id" query-param="clie_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/tabla/{tabla}/empresa/{empr_id}">
      <call-query href="getTablaXEmpresa">
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="tabla" query-param="tabla"/>
      </call-query>
   </resource>
   <resource method="GET" path="/tablas/lista/empresa/{empr_id}">
      <call-query href="getListaTablasXEmpresa">
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="PUT" path="/tabla">
      <call-query href="updateTablas">
         <with-param name="valor" query-param="valor"/>
         <with-param name="valor2" query-param="valor2"/>
         <with-param name="valor3" query-param="valor3"/>
         <with-param name="descripcion" query-param="descripcion"/>
         <with-param name="tabl_id" query-param="tabl_id"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/tabla">
      <call-query href="deleteTablas">
         <with-param name="tabl_id" query-param="tabl_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/estados/pais/{pais}">
      <call-query href="getEstados">
         <with-param name="pais" query-param="pais"/>
      </call-query>
   </resource>
   <resource method="GET" path="/localidades/pais/{pais}/estado/{estado}">
      <call-query href="getLocalidades">
         <with-param name="pais" query-param="pais"/>
         <with-param name="estado" query-param="estado"/>
      </call-query>
   </resource>
   <resource method="GET" path="/paises">
      <call-query href="getPaises"/>
   </resource>
   <resource method="POST" path="/empresa/proceso">
      <call-query href="setCaseEmpresa">
         <with-param name="case_id" query-param="case_id"/>
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/establecimiento">
      <call-query href="setEstablecimiento">
         <with-param name="nombre" query-param="nombre"/>
         <with-param name="calle" query-param="calle"/>
         <with-param name="altura" query-param="altura"/>
         <with-param name="pais" query-param="pais"/>
         <with-param name="estado" query-param="estado"/>
         <with-param name="localidad" query-param="localidad"/>
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="PUT" path="/establecimiento">
      <call-query href="updateEstablecimiento">
         <with-param name="nombre" query-param="nombre"/>
         <with-param name="calle" query-param="calle"/>
         <with-param name="altura" query-param="altura"/>
         <with-param name="localidad" query-param="localidad"/>
         <with-param name="estado" query-param="estado"/>
         <with-param name="pais" query-param="pais"/>
         <with-param name="esta_id" query-param="esta_id"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/establecimiento">
      <call-query href="deleteEstablecimiento">
         <with-param name="esta_id" query-param="esta_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/depositos/establecimiento/{esta_id}/empresa/{empr_id}">
      <call-query href="getDepositoPorEstablecimiento">
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="esta_id" query-param="esta_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/deposito/establecimiento">
      <call-query href="setDepositoPorEstablecimiento">
         <with-param name="descripcion" query-param="descripcion"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="esta_id" query-param="esta_id"/>
         <with-param name="nombre" query-param="nombre"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/deposito">
      <call-query href="deleteDeposito">
         <with-param name="depo_id" query-param="depo_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/establecimientos/{empr_id}">
      <call-query href="getEstablecimientos">
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/transportista">
      <call-query href="deleteTransportista">
         <with-param name="tran_id" query-param="tran_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/empresas">
      <call-query href="getEmpresas"/>
   </resource>
   <resource method="GET" path="/envases/empresa/{empr_id}">
      <call-query href="getEnvasesXEmpresa">
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/unidades_medidas">
      <call-query href="getUnidadesMedidas"/>
   </resource>
   <resource method="POST" path="/envase">
      <call-query href="setEnvase">
         <with-param name="nombre" query-param="nombre"/>
         <with-param name="descripcion" query-param="descripcion"/>
         <with-param name="unidad_medida" query-param="unidad_medida"/>
         <with-param name="capacidad" query-param="capacidad"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="tara" query-param="tara"/>
         <with-param name="receta" query-param="receta"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/envase">
      <call-query href="deleteEnvase">
         <with-param name="empa_id" query-param="empa_id"/>
      </call-query>
   </resource>
   <resource method="PUT" path="/envase">
      <call-query href="updateEnvase">
         <with-param name="nombre" query-param="nombre"/>
         <with-param name="descripcion" query-param="descripcion"/>
         <with-param name="unidad_medida" query-param="unidad_medida"/>
         <with-param name="capacidad" query-param="capacidad"/>
         <with-param name="tara" query-param="tara"/>
         <with-param name="receta" query-param="receta"/>
         <with-param name="empa_id" query-param="empa_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/equipos/empresa/{empr_id}">
      <call-query href="getEquiposxEmpresa">
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/equipo">
      <call-query href="setEquipo">
         <with-param name="descripcion" query-param="descripcion"/>
         <with-param name="sect_id" query-param="sect_id"/>
         <with-param name="area_id" query-param="area_id"/>
         <with-param name="codigo" query-param="codigo"/>
         <with-param name="grup_id" query-param="grup_id"/>
         <with-param name="unme_id" query-param="unme_id"/>
         <with-param name="marca" query-param="marca"/>
         <with-param name="numero_serie" query-param="numero_serie"/>
         <with-param name="crit_id" query-param="crit_id"/>
         <with-param name="fecha_ingreso" query-param="fecha_ingreso"/>
         <with-param name="fecha_garantia" query-param="fecha_garantia"/>
         <with-param name="ubicacion" query-param="ubicacion"/>
         <with-param name="descrip_tecnica" query-param="descrip_tecnica"/>
         <with-param name="estado" query-param="estado"/>
         <with-param name="fecha_ultimalectura" query-param="fecha_ultimalectura"/>
         <with-param name="ultima_lectura" query-param="ultima_lectura"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="activos_id" query-param="activos_id"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/equipo">
      <call-query href="deleteEquipo">
         <with-param name="equi_id" query-param="equi_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/empresa">
      <call-query href="setEmpresa">
         <with-param name="nombre" query-param="nombre"/>
         <with-param name="cuit" query-param="cuit"/>
         <with-param name="descripcion" query-param="descripcion"/>
         <with-param name="telefono" query-param="telefono"/>
         <with-param name="email" query-param="email"/>
         <with-param name="pais_id" query-param="pais_id"/>
         <with-param name="prov_id" query-param="prov_id"/>
         <with-param name="loca_id" query-param="loca_id"/>
         <with-param name="imagepath" query-param="imagepath"/>
         <with-param name="image" query-param="image"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/empresa">
      <call-query href="deleteEmpresa">
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/depositos/encargado/{user_id}">
      <call-query href="getDepositosxEncargado">
         <with-param name="user_id" query-param="user_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/deposito/encargado">
      <call-query href="setEncargadoDeposito">
         <with-param name="depo_id" query-param="depo_id"/>
         <with-param name="user_id" query-param="user_id"/>
      </call-query>
   </resource>
   <resource method="PUT" path="/deposito/establecimiento">
      <call-query href="updateDepositoPorEstablecimiento">
         <with-param name="descripcion" query-param="descripcion"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="esta_id" query-param="esta_id"/>
         <with-param name="depo_id" query-param="depo_id"/>
         <with-param name="nombre" query-param="nombre"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/deposito/encargado">
      <call-query href="deleteDepositoEncargados">
         <with-param name="depo_id" query-param="depo_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/transportistas/{empr_id}">
      <call-query href="getTransportistas">
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/transportista">
      <call-query href="setTransportista">
         <with-param name="cuit" query-param="cuit"/>
         <with-param name="razon_social" query-param="razon_social"/>
         <with-param name="direccion" query-param="direccion"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="telefono" query-param="telefono"/>
         <with-param name="email" query-param="email"/>
         <with-param name="pais_id" query-param="pais_id"/>
         <with-param name="prov_id" query-param="prov_id"/>
         <with-param name="loca_id" query-param="loca_id"/>
         <with-param name="tipo_transporte" query-param="tipo_transporte"/>
         <with-param name="observaciones" query-param="observaciones"/>
      </call-query>
   </resource>
   <resource method="PUT" path="/transportista">
      <call-query href="updateTransportista">
         <with-param name="razon_social" query-param="razon_social"/>
         <with-param name="direccion" query-param="direccion"/>
         <with-param name="cuit" query-param="cuit"/>
         <with-param name="telefono" query-param="telefono"/>
         <with-param name="email" query-param="email"/>
         <with-param name="pais_id" query-param="pais_id"/>
         <with-param name="prov_id" query-param="prov_id"/>
         <with-param name="loca_id" query-param="loca_id"/>
         <with-param name="tipo_transporte" query-param="tipo_transporte"/>
         <with-param name="observaciones" query-param="observaciones"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="tran_id" query-param="tran_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/assetbandeja/linea/validar/case_id/{case_id}/empr_id/{empr_id}">
      <call-query href="validaBPMCaseYEmprAsset">
         <with-param name="case_id" query-param="case_id"/>
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/transportistas/cuit/{cuit}">
      <call-query href="getTransportistasCuit">
         <with-param name="cuit" query-param="cuit"/>
      </call-query>
   </resource>
   <resource method="POST" path="/assetuser/add">
      <description>Agrega un usuario en MariaDB              &#xd;                                    </description>
      <call-query href="setUserAsset">
         <with-param name="nick" query-param="nick"/>
         <with-param name="name" query-param="name"/>
         <with-param name="lastName" query-param="lastName"/>
         <with-param name="pass" query-param="pass"/>
         <with-param name="image" query-param="image"/>
      </call-query>
   </resource>
   <resource method="GET" path="/listas_precios/{empr_id}">
      <call-query href="getListasPrecios">
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/lista_precio_valida_nombre/{nombre}">
      <call-query href="validaNombreListaPrecio">
         <with-param name="nombre" query-param="nombre"/>
      </call-query>
   </resource>
   <resource method="GET" path="/usuario/porTelefono/{phone_number}">
      <call-query href="getUserByPhone">
         <with-param name="phone_number" query-param="phone_number"/>
      </call-query>
   </resource>
   <resource method="POST" path="/lista_precio">
      <call-query href="setListaPrecio">
         <with-param name="nombre" query-param="nombre"/>
         <with-param name="tipo" query-param="tipo"/>
         <with-param name="detalle" query-param="detalle"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="usr_alta" query-param="usr_alta"/>
         <with-param name="usr_app_alta" query-param="usr_app_alta"/>
         <with-param name="usr_ult_modif" query-param="usr_ult_modif"/>
         <with-param name="usr_app_ult_modif" query-param="usr_app_ult_modif"/>
         <with-param name="fec_ult_modif" query-param="fec_ult_modif"/>
      </call-query>
   </resource>
   <resource method="GET" path="/lista_precio/ultimo/{empr_id}">
      <call-query href="getUltimoListaPrecio">
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/version_lista_precio">
      <call-query href="setVersionListaPrecio">
         <with-param name="lipr_id" query-param="lipr_id"/>
         <with-param name="nro_version" query-param="nro_version"/>
         <with-param name="descripcion" query-param="descripcion"/>
         <with-param name="usr_alta" query-param="usr_alta"/>
         <with-param name="usr_app_alta" query-param="usr_app_alta"/>
         <with-param name="usr_ult_modif" query-param="usr_ult_modif"/>
         <with-param name="usr_app_ult_modif" query-param="usr_app_ult_modif"/>
         <with-param name="fec_ult_modif" query-param="fec_ult_modif"/>
      </call-query>
   </resource>
   <resource method="POST" path="/costo_recurso">
      <call-query href="setCostoRecurso">
         <with-param name="recu_id" query-param="recu_id"/>
         <with-param name="velp_id" query-param="velp_id"/>
         <with-param name="precio" query-param="precio"/>
      </call-query>
   </resource>
</data>
