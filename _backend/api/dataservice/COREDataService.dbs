<data enableBatchRequests="true" enableBoxcarring="true" name="COREDataService" transports="http https local">
   <config enableOData="false" id="ToolsDataSource">
      <property name="carbon_datasource_name">ToolsDataSource</property>
   </config>
   <query id="getMenuByUserPermission" useConfig="ToolsDataSource">
      <sql>SELECT DISTINCT(m.*)&#xd;FROM (WITH RECURSIVE menu_tree AS(&#xd;SELECT&#xd;	m.modulo , m.opcion, m.opcion_padre, m.texto , m.url , m.javascript , m.url_icono , m.texto_onmouseover, 1 AS nivel, m.orden || '.' || m.modulo || '.' || m.opcion AS camino&#xd;FROM&#xd;	seg.menues M&#xd;WHERE&#xd;	M.opcion_padre IS NULL&#xd;	AND eliminado = 0&#xd;UNION&#xd;SELECT&#xd;	m.modulo , m.opcion , m.opcion_padre , m.texto , m.url , m.javascript , m.url_icono , m.texto_onmouseover, (t.nivel + 1) AS nivel, t.camino || '&gt;' || m.orden || '.' || m.modulo || '.' || m.opcion AS PATH&#xd;FROM&#xd;	seg.menues M&#xd;INNER JOIN menu_tree t ON&#xd;	m.opcion_padre = t.opcion&#xd;	AND m.modulo = t.modulo&#xd;WHERE&#xd;	m.eliminado = 0 )&#xd;SELECT&#xd;	t.*,mm."group" grupo_seleccionado,CASE&#xd;		WHEN mm."role" IS NOT NULL&#xd;		OR mm."group" IS NOT NULL THEN TRUE&#xd;		ELSE FALSE&#xd;	END habilitado&#xd;FROM&#xd;	(SELECT * FROM menu_tree mt, (SELECT :group grupo) g) t&#xd;	LEFT JOIN seg.memberships_users mu ON mu.email = :email AND mu."group" = CASE WHEN t.grupo IS NULL OR t.grupo = '' THEN mu."group" ELSE t.grupo END&#xd;    LEFT JOIN seg.memberships_menues mm ON&#xd;	(mm."group" = mu."group" OR mm."group" IS NULL)&#xd;	AND (mm."role" = mu."role" OR mm."role" IS NULL)&#xd;	AND mm.opcion = t.opcion&#xd;	AND mm.modulo = t.modulo&#xd;) m ORDER BY m.camino</sql>
      <result outputType="json">{&#xd;   "menu_items":{&#xd;      "menu_item":[&#xd;         {&#xd;            "modulo":"$modulo",&#xd;            "opcion":"$opcion",&#xd;            "opcion_padre":"$opcion_padre",&#xd;            "texto":"$texto",&#xd;            "url":"$url",&#xd;            "javascript":"$javascript",&#xd;            "url_icono":"$url_icono",&#xd;            "texto_onmouseover":"$texto_onmouseover",&#xd;            "nivel":"$nivel",&#xd;            "camino":"$camino",&#xd;            "habilitado":"$habilitado"&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
      <param name="email" sqlType="STRING"/>
      <param name="group" sqlType="STRING"/>
   </query>
   <query id="setParametro" useConfig="ToolsDataSource">
      <sql>INSERT INTO utl_tablas&#xd;(tabla, valor, descripcion)&#xd;VALUES&#xd;(:tabla, :valor, :descripcion)</sql>
      <param name="tabla" sqlType="STRING"/>
      <param name="valor" sqlType="STRING"/>
      <param name="descripcion" sqlType="STRING"/>
   </query>
   <query id="getParametros" useConfig="ToolsDataSource">
      <sql>SELECT * &#xd;FROM alm.utl_tablas&#xd;WHERE tabla = :tabla</sql>
      <result outputType="json">{&#xd; "parametros": {&#xd; "parametro": [&#xd; {&#xd; "valor": "$valor",&#xd; "descripcion": "$descripcion"&#xd; }&#xd; ]&#xd; }&#xd;}</result>
      <param name="tabla" sqlType="STRING"/>
   </query>
   <query id="getTabla" useConfig="ToolsDataSource">
      <sql>SELECT * &#xd;FROM core.tablas&#xd;WHERE tabla = :tabla</sql>
      <result outputType="json">{&#xd;    "tablas":{&#xd;        "tabla":[&#xd;            {&#xd;                "tabl_id":"$tabl_id",&#xd;                "valor":"$valor",&#xd;                "valor2":"$valor2",&#xd;                "valor3":"$valor3",&#xd;                "descripcion":"$descripcion",&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="tabla" sqlType="STRING"/>
   </query>
   <query id="setSnapshot" useConfig="ToolsDataSource">
      <sql>INSERT INTO core.snapshots&#xd;(snap_id, "data") &#xd;VALUES(:clave, :data)&#xd;ON CONFLICT (snap_id) DO UPDATE &#xd;  SET "data" = excluded.data;</sql>
      <param name="data" sqlType="STRING"/>
      <param name="clave" sqlType="STRING"/>
   </query>
   <query id="getSnapshot" useConfig="ToolsDataSource">
      <sql>SELECT * FROM core.snapshots WHERE snap_id = :clave</sql>
      <result outputType="json">{&#xd;    "data":{&#xd;        "snapshot":[&#xd;            {&#xd;                "data":"$data"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="clave" sqlType="STRING"/>
   </query>
   <query id="delSnapshot" useConfig="ToolsDataSource">
      <sql>DELETE FROM&#xd;core.snapshots&#xd;where snap_id = :clave</sql>
      <param name="clave" sqlType="STRING"/>
   </query>
   <query id="getUsers" useConfig="ToolsDataSource">
      <sql>select id, first_name, last_name, email&#xd;FROM seg.users &#xd;WHERE status = 'approved' and banned_users = 'unban'</sql>
      <result outputType="json">{&#xd;   "users":{&#xd;      "user":[&#xd;         {&#xd;            "id_user":"$id",&#xd;            "first_name_user":"$first_name",&#xd;            "last_name_user":"$last_name",&#xd;            "email_user":"$email"&#xd;         }&#xd;      ]&#xd;   }&#xd;}</result>
   </query>
   <query id="setTabla" useConfig="ToolsDataSource">
      <sql>INSERT INTO core.tablas&#xd;(tabla, valor, valor2, valor3,descripcion)&#xd;VALUES&#xd;(:tabla, :valor, :valor2, :valor3,:descripcion)&#xd;returning tabl_id</sql>
      <result outputType="json">{"respuesta":{"tabl_id":"$tabl_id"}}</result>
      <param name="tabla" sqlType="STRING"/>
      <param name="valor" sqlType="STRING"/>
      <param name="valor2" sqlType="STRING"/>
      <param name="valor3" sqlType="STRING"/>
      <param name="descripcion" sqlType="STRING"/>
   </query>
   <query id="validaBPMCaseYEmpr" useConfig="ToolsDataSource">
      <sql>select case_id&#xd;from core.case_empresa&#xd; where case_id = cast(:case_id as INTEGER) &#xd; and empr_id = cast(:empr_id as INTEGER)</sql>
      <result outputType="json">{"respuesta":{ "case_id":"$case_id" }}</result>
      <param name="case_id" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="getClientexEmpresayEstado" useConfig="ToolsDataSource">
      <sql>SELECT * FROM core.clientes&#xd;WHERE EMPR_ID = CAST(:empr_id AS INTEGER) &#xd;and estado = :estado</sql>
      <result outputType="json">{&#xd; "cliente":{&#xd;   "clientes":[&#xd;     {&#xd;      "clie_id":"$clie_id",&#xd;      "nombre":"$nombre",&#xd;      "dir_entrega":"$dir_entrega",&#xd;      "observaciones":"$observaciones",&#xd;      "ticl_id":"$ticl_id",&#xd;      "estado":"$estado"&#xd;     }&#xd;   ]&#xd;  }&#xd;}</result>
      <param name="empr_id" sqlType="STRING"/>
      <param name="estado" sqlType="STRING"/>
   </query>
   <query id="getEquiposXSector" useConfig="ToolsDataSource">
      <sql>select * from core.equipos where sect_id = :sect_id</sql>
      <result outputType="json">{&#xd;  "equipos": {&#xd;    "equipo": [&#xd;      {&#xd;        "descripcion": "$descripcion",&#xd;        "marca": "$marca",&#xd;        "codigo": "$codigo",&#xd;        "ubicacion": "$ubicacion",&#xd;        "estado": "$estado",&#xd;        "fecha_ultimalectura": "$fecha_ultimalectura",&#xd;        "ultima_lectura": "$ultima_lectura",&#xd;        "tipo_horas": "$tipo_horas",&#xd;        "valor_reposicion": "$valor_reposicion",&#xd;        "fecha_reposicion": "$fecha_reposicion",&#xd;        "valor": "$valor",&#xd;        "comprobante": "$comprobante",&#xd;        "descrip_tecnica": "$descrip_tecnica",&#xd;        "numero_serie": "$numero_serie",&#xd;        "adjunto": "$adjunto",&#xd;        "meta_disponibilidad": "$meta_disponibilidad",&#xd;        "fecha_ingreso": "$fecha_ingreso",&#xd;        "fecha_baja": "$fecha_baja",&#xd;        "fecha_garantia": "$fecha_garantia",&#xd;        "prov_id": "$prov_id",&#xd;        "empr_id": "$empr_id",&#xd;        "sect_id": "$sect_id",&#xd;        "ubic_id": "$ubic_id",&#xd;        "grup_id": "$grup_id",&#xd;        "crit_id": "$crit_id",&#xd;        "unme_id": "$unme_id",&#xd;        "area_id": "$area_id",&#xd;        "proc_id": "$proc_id"&#xd;      }&#xd;    ]&#xd;  }&#xd;}&#xd;</result>
      <param name="sect_id" sqlType="STRING"/>
   </query>
   <query id="setCliente" returnGeneratedKeys="true" useConfig="ToolsDataSource">
      <sql>INSERT INTO core.clientes&#xd;(nombre, dir_entrega, observaciones,  usuario_app, ticl_id, empr_id)&#xd;VALUES(:nombre, :dir_entrega, :observaciones,  :usuario_app, :ticl_id, cast(:empr_id as integer))</sql>
      <result element="GeneratedKeys" rowName="Entry" useColumnNumbers="true">
         <element column="1" name="ID" xsdType="integer"/>
      </result>
      <param name="nombre" sqlType="STRING"/>
      <param name="dir_entrega" sqlType="STRING"/>
      <param name="observaciones" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="ticl_id" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="updateCliente" useConfig="ToolsDataSource">
      <sql>UPDATE core.clientes&#xd;SET &#xd;nombre=:nombre,&#xd;dir_entrega=:dir_entrega, observaciones=:observaciones, usuario_app=:usuario_app, ticl_id=:ticl_id&#xd;WHERE clie_id=cast(:clie_id as integer) ;</sql>
      <param name="dir_entrega" sqlType="STRING"/>
      <param name="observaciones" sqlType="STRING"/>
      <param name="usuario_app" sqlType="STRING"/>
      <param name="ticl_id" sqlType="STRING"/>
      <param name="clie_id" sqlType="STRING"/>
      <param name="nombre" sqlType="STRING"/>
   </query>
   <query id="deleteCliente" useConfig="ToolsDataSource">
      <sql>UPDATE core.clientes&#xd;SET estado='ELIMINADO'&#xd;WHERE clie_id=cast(:clie_id as integer) ;</sql>
      <param name="clie_id" sqlType="STRING"/>
   </query>
   <query id="getUsersXGroup" useConfig="ToolsDataSource">
      <sql>select U.id, U.first_name, U.last_name from seg.users U, seg.memberships_users MU&#xd;where U.email = MU.email&#xd;and MU.group = :group</sql>
      <result outputType="json">{&#xd;    "usuarios":{&#xd;                    "usuario": [&#xd;                      {&#xd;                        "id": "$id",&#xd;                        "first_name": "$first_name",&#xd;                        "last_name": "$last_name"&#xd;                      }&#xd;                    ]&#xd;    }&#xd;}</result>
      <param name="group" sqlType="STRING"/>
   </query>
   <query id="getCliente" useConfig="ToolsDataSource">
      <sql>select&#xd;	c.clie_id ,&#xd;	c.nombre,&#xd;	c.dir_entrega,&#xd;	c.observaciones ,&#xd;	t.valor tipo_cliente,&#xd;	estado,&#xd;	to_char( c.fec_alta, 'YYYY-MM-DD HH24:MI') fec_alta&#xd;from&#xd;	core.clientes c ,&#xd;	core.tablas t&#xd;where&#xd;	t.tabl_id = c.ticl_id&#xd;	and c.clie_id = cast(:clie_id as integer)</sql>
      <result outputType="json">{&#xd;   "cliente":{&#xd;      "clie_id":"$clie_id",&#xd;      "nombre":"$nombre",&#xd;      "dir_entrega":"$dir_entrega",&#xd;      "observaciones":"$observaciones",&#xd;      "tipo_cliente":"$tipo_cliente",&#xd;      "estado":"$estado",&#xd;      "fec_alta":"$fec_alta"&#xd;   }&#xd;}</result>
      <param name="clie_id" sqlType="STRING"/>
   </query>
   <resource method="GET" path="/menuitems/porEmail/{email}/porGrupo/{group}">
      <call-query href="getMenuByUserPermission">
         <with-param name="email" query-param="email"/>
         <with-param name="group" query-param="group"/>
      </call-query>
   </resource>
   <resource method="POST" path="/parametros">
      <call-query href="setParametro">
         <with-param name="tabla" query-param="tabla"/>
         <with-param name="valor" query-param="valor"/>
         <with-param name="descripcion" query-param="descripcion"/>
      </call-query>
   </resource>
   <resource method="GET" path="/parametros/{tabla}">
      <call-query href="getParametros">
         <with-param name="tabla" query-param="tabla"/>
      </call-query>
   </resource>
   <resource method="GET" path="/tablas/{tabla}">
      <call-query href="getTabla">
         <with-param name="tabla" query-param="tabla"/>
      </call-query>
   </resource>
   <resource method="POST" path="/snapshots">
      <call-query href="setSnapshot">
         <with-param name="data" query-param="data"/>
         <with-param name="clave" query-param="clave"/>
      </call-query>
   </resource>
   <resource method="GET" path="/snapshots/{clave}">
      <call-query href="getSnapshot">
         <with-param name="clave" query-param="clave"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/snapshots">
      <call-query href="delSnapshot">
         <with-param name="clave" query-param="clave"/>
      </call-query>
   </resource>
   <resource method="GET" path="/users">
      <call-query href="getUsers"/>
   </resource>
   <resource method="POST" path="/tablas">
      <call-query href="setTabla">
         <with-param name="tabla" query-param="tabla"/>
         <with-param name="valor" query-param="valor"/>
         <with-param name="valor2" query-param="valor2"/>
         <with-param name="valor3" query-param="valor3"/>
         <with-param name="descripcion" query-param="descripcion"/>
      </call-query>
   </resource>
   <resource method="GET" path="/bandeja/linea/validar/case_id/{case_id}/empr_id/{empr_id}">
      <call-query href="validaBPMCaseYEmpr">
         <with-param name="case_id" query-param="case_id"/>
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/clientes/porEmpresa/{empr_id}/porEstado/{estado}">
      <call-query href="getClientexEmpresayEstado">
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="estado" query-param="estado"/>
      </call-query>
   </resource>
   <resource method="GET" path="/equipos/sector/{sect_id}">
      <call-query href="getEquiposXSector">
         <with-param name="sect_id" query-param="sect_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/cliente">
      <call-query href="setCliente">
         <with-param name="nombre" query-param="nombre"/>
         <with-param name="dir_entrega" query-param="dir_entrega"/>
         <with-param name="observaciones" query-param="observaciones"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="ticl_id" query-param="ticl_id"/>
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="PUT" path="/cliente">
      <call-query href="updateCliente">
         <with-param name="dir_entrega" query-param="dir_entrega"/>
         <with-param name="observaciones" query-param="observaciones"/>
         <with-param name="usuario_app" query-param="usuario_app"/>
         <with-param name="ticl_id" query-param="ticl_id"/>
         <with-param name="clie_id" query-param="clie_id"/>
         <with-param name="nombre" query-param="nombre"/>
      </call-query>
   </resource>
   <resource method="DELETE" path="/cliente">
      <call-query href="deleteCliente">
         <with-param name="clie_id" query-param="clie_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/users/{group}">
      <call-query href="getUsersXGroup">
         <with-param name="group" query-param="group"/>
      </call-query>
   </resource>
   <resource method="GET" path="/cliente/{clie_id}">
      <call-query href="getCliente">
         <with-param name="clie_id" query-param="clie_id"/>
      </call-query>
   </resource>
</data>

