<data enableBatchRequests="true" enableBoxcarring="true" name="LOGDataService" transports="http https local">
   <config enableOData="false" id="ToolsDataSource">
      <property name="carbon_datasource_name">ToolsDataSource</property>
   </config>
   <query id="getMovimientosTransporte" useConfig="ToolsDataSource">
      <sql>select DISTINCT mt.motr_id, mv.tipo, es.nombre establecimiento, mv.tipo tipo_movimiento, &#xd;       mt.cuit, mt.boleta, mt.acoplado, pr.nombre proveedor, &#xd;       tr.razon_social transportista, to_char(mt.fecha_entrada,'dd-mm-yyyy') fecha_entrada, &#xd;       mt.patente, mt.neto, mt.estado, mt.accion, mt.fecha_entrada as fecha_orden&#xd;from prd.movimientos_trasportes mt&#xd;inner join prd.establecimientos es on es.esta_id = mt.esta_id&#xd;inner join alm.alm_proveedores pr on mt.prov_id = pr.prov_id&#xd;inner join core.transportistas tr on mt.cuit = tr.cuit&#xd;cross join (select :tipo_movimiento tipo) mv&#xd;where mt.empr_id = cast(:empr_id as integer)&#xd;and mt.estado != 'FINALIZADO'&#xd;order by fecha_orden desc</sql>
      <result outputType="json">{"movimientosTransporte":{&#xd;   "movimientoTransporte":[&#xd;     {&#xd;      "boleta":"$boleta"&#xd;      ,"establecimiento":"$establecimiento"&#xd;      ,"proveedor":"$proveedor"  &#xd;      ,"transportista":"$transportista"&#xd;      ,"fecha_entrada":"$fecha_entrada"&#xd;      ,"patente":"$patente"&#xd;      ,"acoplado":"$acoplado"&#xd;      ,"neto":"$neto"&#xd;      ,"estado":"$estado",&#xd;      "cuit":"$cuit",&#xd;      "accion":"$accion",&#xd;      "motr_id" : "$motr_id",&#xd;      "@getArticulosMovimientoTransporte":"$tipo_movimiento-&gt;tipo_movimiento,$motr_id-&gt;motr_id"&#xd;     }&#xd;   ]&#xd;}&#xd;}&#xd;</result>
      <param name="tipo_movimiento" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="getArticulosMovimientoTransporte" useConfig="ToolsDataSource">
      <sql>select al.codigo codigo_lote, ar.descripcion articulo, ar.unidad_medida um,&#xd;case when tm.tipo='RECEPCION'&#xd;then lh.cantidad_padre &#xd;else lh.cantidad &#xd;end cantidad&#xd;from alm.alm_articulos ar&#xd;,alm.alm_lotes al&#xd;,prd.lotes lo&#xd;,prd.lotes_hijos lh&#xd;,prd.recipientes re &#xd;,prd.movimientos_trasportes tr &#xd;,(select :tipo_movimiento tipo) tm&#xd;where tr.motr_id = re.motr_id&#xd;and lo.reci_id = re.reci_id&#xd;and al.batch_id = lo.batch_id&#xd;and ar.arti_id = al.arti_id&#xd;and case &#xd;	when tm.tipo = 'RECEPCION' &#xd;	then lh.batch_id_padre = lo.batch_id &#xd;	else lh.batch_id=lo.batch_id &#xd;	end&#xd;and tr.motr_id = cast(:motr_id as integer)</sql>
      <result outputType="json">{"articulos":{&#xd;"articulo":[&#xd;{&#xd;"codigo_lote":"$codigo_lote",&#xd;"articulo":"$articulo",&#xd;"cantidad":"$cantidad",&#xd;"um":"$um"&#xd;}&#xd;]&#xd;}&#xd;}</result>
      <param name="tipo_movimiento" sqlType="STRING"/>
      <param name="motr_id" sqlType="STRING"/>
   </query>
   <query id="setEntradaXReci" useConfig="ToolsDataSource">
      <sql>INSERT INTO prd.movimientos_trasportes&#xd;(boleta, fecha_entrada, patente, acoplado, conductor, tipo, bruto, tara, neto, prov_id, esta_id, reci_id)&#xd;VALUES&#xd;(:boleta, TO_DATE(:fecha,'YYYY-MM-DD'), :patente, :acoplado, :conductor, :tipo, CAST(:bruto as float8), CAST(:tara as float8), CAST(:neto as float8), CAST(:proveedor as INTEGER), CAST(:establecimiento as INTEGER), CAST(:reci_id as INTEGER))</sql>
      <param name="boleta" sqlType="STRING"/>
      <param name="patente" sqlType="STRING"/>
      <param name="acoplado" sqlType="STRING"/>
      <param name="conductor" sqlType="STRING"/>
      <param name="tipo" sqlType="STRING"/>
      <param name="bruto" sqlType="STRING"/>
      <param name="tara" sqlType="STRING"/>
      <param name="neto" sqlType="STRING"/>
      <param name="fecha" sqlType="STRING"/>
      <param name="proveedor" sqlType="STRING"/>
      <param name="establecimiento" sqlType="STRING"/>
      <param name="reci_id" sqlType="STRING"/>
   </query>
   <query id="getCamionEstablecimiento" useConfig="ToolsDataSource">
      <sql>SELECT motr_id as id ,patente,conductor, fecha_entrada as fecha, reci_id&#xd;FROM prd.movimientos_trasportes&#xd;WHERE esta_id = CAST(:esta_id as INTEGER)&#xd;AND estado = 'EN CURSO'&#xd;AND eliminado = FALSE</sql>
      <result outputType="json">{&#xd;    "camiones":{&#xd;        "camion":[&#xd;            {&#xd;                "id":"$id",&#xd;                "patente":"$patente",&#xd;                "conductor":"$conductor",&#xd;                "fecha":"$fecha",&#xd;                "reci_id":"$reci_id"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="esta_id" sqlType="STRING"/>
   </query>
   <query id="getLotesCamion" useConfig="ToolsDataSource">
      <sql>select lo.lote_id, lo.batch_id, lo.reci_id, al.cantidad,  e.nombre establecimiento, al.arti_id, t.descripcion  as um, aa.barcode, aa.descripcion&#xd;from &#xd;prd.movimientos_trasportes as mt&#xd;,prd.recipientes as re&#xd;,prd.lotes as lo&#xd;,alm.alm_lotes as al&#xd;,alm.alm_depositos as ad&#xd;,prd.establecimientos as e&#xd;,alm.alm_articulos as aa&#xd;left join core.tablas t on t.tabl_id = aa.unme_id&#xd;where mt.motr_id = re.motr_id &#xd;and re.reci_id = lo.reci_id&#xd;and al.batch_id = lo.batch_id&#xd;and al.depo_id = ad.depo_id&#xd;and ad.esta_id = e.esta_id&#xd;and al.arti_id = aa.arti_id&#xd;and mt.patente = :patente&#xd;and lo.estado != 'FINALIZADO'</sql>
      <result outputType="json">{&#xd;    "lotes":{&#xd;        "lote":[&#xd;            {&#xd;                "barcode":"$barcode",&#xd;                "descripcion":"$descripcion",&#xd;                "lote_id":"$lote_id",&#xd;                "batch_id":"$batch_id",&#xd;                "reci_id":"$reci_id",&#xd;                "cantidad":"$cantidad",&#xd;                "establecimiento":"$establecimiento",&#xd;                "arti_id":"$arti_id",&#xd;                "um":"$um"&#xd;               &#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="patente" sqlType="STRING"/>
   </query>
   <query id="getTransportistas" useConfig="ToolsDataSource">
      <sql>select * from core.transportistas&#xd;where empr_id = cast(:empr_id as integer)&#xd;and not eliminado</sql>
      <result outputType="json">{&#xd;    "transportistas":{&#xd;        "transportista":[&#xd;            {&#xd;                "cuit":"$cuit",&#xd;                "razon_social":"$razon_social",&#xd;                "direccion":"$direccion"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="setCamionEstado" useConfig="ToolsDataSource">
      <sql>update prd.movimientos_trasportes set estado= :estado where motr_id = cast(:motr_id as int4)</sql>
      <param name="estado" sqlType="STRING"/>
      <param name="motr_id" sqlType="STRING"/>
   </query>
   <query id="getCamion" useConfig="ToolsDataSource">
      <sql>SELECT mt.motr_id, mt.patente, mt.acoplado, mt.conductor, mt.tipo, mt.bruto, mt.tara, mt.neto, mt.esta_id, mt.empr_id, e.nombre AS esta_nombre, mt.estado&#xd;FROM prd.movimientos_trasportes mt&#xd;INNER JOIN prd.establecimientos e ON e.esta_id = mt.esta_id&#xd;WHERE mt.patente = :patente&#xd;and mt.empr_id = cast(:empr_id as integer)</sql>
      <result outputType="json">{&#xd;    "camiones":{&#xd;        "camion":[&#xd;            {&#xd;                "motr_id":"$motr_id",&#xd;                "acoplado":"$acoplado",&#xd;                "conductor":"$conductor",&#xd;                "tipo":"$tipo",&#xd;                "bruto":"$bruto",&#xd;                "tara":"$tara",&#xd;                "neto":"$neto",&#xd;                "patente":"$patente",&#xd;                "esta_id":"$esta_id",&#xd;                "esta_nombre":"$esta_nombre",&#xd;                "estado":"$estado"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="patente" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="setSalidaCamion" useConfig="ToolsDataSource">
      <sql>UPDATE prd.movimientos_trasportes&#xd;SET 	bruto = CAST(:bruto as float8), &#xd;		tara = cast(:tara as float8),&#xd;		neto = CAST(:neto as float8), &#xd;		estado = :estado&#xd;WHERE motr_id = cast(:motr_id as integer)</sql>
      <param name="bruto" sqlType="STRING"/>
      <param name="neto" sqlType="STRING"/>
      <param name="estado" sqlType="STRING"/>
      <param name="motr_id" sqlType="STRING"/>
      <param name="tara" sqlType="STRING"/>
   </query>
   <query id="setEntrada" useConfig="ToolsDataSource">
      <sql>INSERT INTO prd.movimientos_trasportes&#xd;(boleta, fecha_entrada, patente, acoplado, conductor, tipo, bruto, tara, neto, prov_id, esta_id, cuit, estado, accion, empr_id)&#xd;VALUES&#xd;(:boleta, TO_DATE(:fecha,'YYYY-MM-DD'), :patente, :acoplado, :conductor, :tipo, CAST(:bruto as float8), CAST(:tara as float8), CAST(:neto as float8), CAST(:proveedor as INTEGER), CAST(:establecimiento as INTEGER), :cuit, :estado, :accion, cast(:empr_id as integer))</sql>
      <param name="boleta" sqlType="STRING"/>
      <param name="patente" sqlType="STRING"/>
      <param name="acoplado" sqlType="STRING"/>
      <param name="conductor" sqlType="STRING"/>
      <param name="tipo" sqlType="STRING"/>
      <param name="bruto" sqlType="STRING"/>
      <param name="tara" sqlType="STRING"/>
      <param name="neto" sqlType="STRING"/>
      <param name="fecha" sqlType="STRING"/>
      <param name="proveedor" sqlType="STRING"/>
      <param name="establecimiento" sqlType="STRING"/>
      <param name="estado" sqlType="STRING"/>
      <param name="cuit" sqlType="STRING"/>
      <param name="accion" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="getIngresosMovimientoTransporte" useConfig="ToolsDataSource">
      <sql>SELECT  &#xd;mt.motr_id ,&#xd;mt.boleta, &#xd;to_char(mt.fecha_entrada, 'DD-MM-YYYY') as fecha, &#xd;p.nombre, &#xd;t.razon_social,&#xd;mt.patente, &#xd;ROUND(cast(mt.neto as numeric), 2) as neto, &#xd;a.descripcion,&#xd;a.unidad_medida,&#xd;a.arti_id,&#xd;ROUND(cast(lo.cantidad as numeric), 2) as cantidad, &#xd;mt.estado&#xd;,t.cuit&#xd;,p.prov_id&#xd;,lo.fec_alta&#xd;,lo.codigo &#xd;,lo.lote_id&#xd;,rhijo.nombre as recipiente&#xd;,e.nombre ||' | '||ad.descripcion as deposito&#xd;,lo.codigo&#xd;,l.batch_id batch_id_camion&#xd;,lhijo.batch_id&#xd;from &#xd;core.transportistas t,&#xd;(select :fechasta fec_hasta, :fecdesde fec_desde, :arti_id arti_id, :prov_id prov_id,:cuit cuit, :u_medida u_medida) param,&#xd;prd.movimientos_trasportes mt&#xd;LEFT JOIN prd.recipientes r ON mt.motr_id = r. motr_id &#xd;			and r.tipo = 'TRANSPORTE'&#xd;			and r.eliminado = 0&#xd;LEFT JOIN prd.lotes l ON r.reci_id = l.reci_id&#xd;			and l.eliminado = 0&#xd;LEFT JOIN prd.lotes_hijos lh on lh.batch_id_padre = l.batch_id &#xd;LEFT JOIN prd.lotes lhijo on lhijo.batch_id = lh.batch_id 	&#xd;left join prd.recipientes rhijo on rhijo.reci_id = lhijo.reci_id &#xd;LEFT JOIN alm.alm_lotes lo ON lhijo.batch_id = lo.batch_id&#xd;			and lo.eliminado = false&#xd;LEFT JOIN alm.alm_articulos a ON  lo.arti_id = a.arti_id&#xd;LEFT JOIN alm.alm_proveedores p ON mt.prov_id = p.prov_id&#xd;LEFT JOIN alm.alm_depositos ad on rhijo.depo_id = ad.depo_id &#xd;left join prd.establecimientos e on ad.esta_id = e.esta_id &#xd;where t.eliminado = false&#xd;and mt.cuit = t.cuit&#xd;and mt.eliminado = FALSE&#xd;and mt.empr_id = cast(:empr_id as integer)&#xd;and ((param.cuit &lt;&gt; '' AND t.cuit = param.cuit) OR param.cuit = '')&#xd;and ((param.prov_id &lt;&gt; '' AND p.prov_id = cast(param.prov_id  as integer) ) OR param.prov_id='')&#xd;and ((param.arti_id &lt;&gt; ''  AND a.arti_id = cast(param.arti_id  as integer) ) OR param.arti_id ='')&#xd;and ((param.fec_hasta &lt;&gt; '' AND lo.fec_alta &lt;= to_date(param.fec_hasta,'YYYY-MM-DD') ) OR param.fec_hasta = '')&#xd;and ((param.fec_desde &lt;&gt; '' AND lo.fec_alta &gt;= to_date(param.fec_desde,'YYYY-MM-DD') ) OR param.fec_desde = '')&#xd;and ((param.u_medida &lt;&gt; '' AND a.unidad_medida= param.u_medida ) OR param.u_medida ='')</sql>
      <result outputType="json">{&#xd;    "movimientos": {&#xd;        "movimiento": [&#xd;            {&#xd;                "id": "$motr_id",&#xd;                "boleta": "$boleta",&#xd;                "fecha": "$fecha",&#xd;                "nombre": "$nombre",&#xd;                "razon_social": "$razon_social",&#xd;                "patente": "$patente",&#xd;                "neto": "$neto",&#xd;                "descripcion": "$descripcion",&#xd;                "unidad_medida": "$unidad_medida",&#xd;                "codigo": "$codigo",&#xd;                "batch_id_camion": "$batch_id_camion",&#xd;                "batch_id": "$batch_id",&#xd;                "deposito": "$deposito",&#xd;                "recipiente": "$recipiente",&#xd;                "cantidad": "$cantidad",&#xd;                "estado": "$estado"&#xd;            }&#xd;        ]&#xd;    }&#xd;}</result>
      <param name="fechasta" sqlType="STRING"/>
      <param name="fecdesde" sqlType="STRING"/>
      <param name="arti_id" sqlType="STRING"/>
      <param name="prov_id" sqlType="STRING"/>
      <param name="cuit" sqlType="STRING"/>
      <param name="u_medida" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
   </query>
   <query id="getCantidadIngresosMovimientoTransporte" useConfig="ToolsDataSource">
      <sql>select &#xd;COUNT(*)&#xd;from &#xd;alm.alm_articulos a, &#xd;alm.alm_proveedores p, &#xd;core.transportistas t, &#xd;prd.movimientos_trasportes mt,&#xd;prd.recipientes r,&#xd;prd.lotes l,&#xd;alm.alm_lotes lo,&#xd;(select :fechasta fec ) hasta,&#xd;(select :fecdesde fec ) desde,&#xd;(select :arti_id filtro) arti_id,&#xd;(select :prov_id filtro ) prov_id,&#xd;(select :cuit filtro ) cuit&#xd;where &#xd;t.eliminado = false&#xd;and mt.cuit = t.cuit&#xd;and mt.motr_id = r. motr_id &#xd;and mt.eliminado = false&#xd;and mt.prov_id = p.prov_id &#xd;and r.tipo = 'TRANSPORTE'&#xd;and r.eliminado = 0&#xd;and r.reci_id = l.reci_id&#xd;and l.eliminado = 0&#xd;and l.batch_id = lo.batch_id&#xd;and lo.eliminado = false&#xd;and lo.arti_id = a.arti_id&#xd;---------------------------------------------------------&#xd;and t.cuit =  case when cuit.filtro is null or cuit.filtro = '' then t.cuit &#xd;else cuit.filtro end&#xd;and p.prov_id = case when prov_id.filtro is null or prov_id.filtro = '' then p.prov_id &#xd;else cast(prov_id.filtro as integer) end &#xd;and a.arti_id = case when arti_id.filtro is null or arti_id.filtro = '' then a.arti_id &#xd;else cast(arti_id.filtro  as integer) end &#xd;and lo.fec_alta &lt;= to_date(case when hasta.fec is null or hasta.fec = '' then '2100-01-01' &#xd;else hasta.fec end ,'YYYY-MM-DD') &#xd;and lo.fec_alta &gt;= to_date(case when desde.fec is null or desde.fec = '' then '1899-01-01' &#xd;else desde.fec end,'YYYY-MM-DD')</sql>
      <result outputType="json">{"cantidades":{&#xd;"cantidad": [&#xd;{&#xd;"cant_ingresos":"$count"&#xd;}&#xd;]&#xd;}&#xd;}</result>
      <param name="fechasta" sqlType="STRING"/>
      <param name="fecdesde" sqlType="STRING"/>
      <param name="arti_id" sqlType="STRING"/>
      <param name="prov_id" sqlType="STRING"/>
      <param name="cuit" sqlType="STRING"/>
   </query>
   <query id="getSalidasMovimientoTransporte" useConfig="ToolsDataSource">
      <sql>select &#xd;mt.boleta, &#xd;to_char(mt.fecha_entrada, 'DD-MM-YYYY') as fecha, &#xd;c.nombre, &#xd;t.razon_social,&#xd;mt.patente, &#xd;ROUND(cast(mt.neto as numeric), 2) as neto, &#xd;a.descripcion, &#xd;ROUND(cast(lo.cantidad as numeric), 2) as cantidad, &#xd;mt.estado&#xd;from &#xd;alm.alm_articulos a, &#xd;core.clientes c, &#xd;core.transportistas t, &#xd;prd.movimientos_trasportes mt,&#xd;prd.recipientes r,&#xd;prd.lotes l,&#xd;alm.alm_lotes lo,&#xd;(select :fechasta fec ) hasta,&#xd;(select :fecdesde fec ) desde,&#xd;(select :arti_id filtro) arti_id,&#xd;(select :clie_id filtro ) clie_id,&#xd;(select :cuit filtro ) cuit&#xd;where &#xd;t.eliminado = false&#xd;and mt.cuit = t.cuit&#xd;and mt.motr_id = r. motr_id &#xd;and mt.eliminado = false&#xd;and mt.clie_id = c.clie_id &#xd;and r.tipo = 'TRANSPORTE'&#xd;and r.eliminado = 0&#xd;and r.reci_id = l.reci_id&#xd;and l.eliminado = 0&#xd;and l.batch_id = lo.batch_id&#xd;and lo.eliminado = false&#xd;and lo.arti_id = a.arti_id&#xd;---------------------------------------------------------&#xd;and t.cuit =  case when cuit.filtro is null or cuit.filtro = '' then t.cuit &#xd;else cuit.filtro end&#xd;and c.clie_id = case when clie_id.filtro is null or clie_id.filtro = '' then c.clie_id &#xd;else cast(clie_id.filtro as integer) end &#xd;and a.arti_id = case when arti_id.filtro is null or arti_id.filtro = '' then a.arti_id &#xd;else cast(arti_id.filtro  as integer) end &#xd;and lo.fec_alta &lt;= to_date(case when hasta.fec is null or hasta.fec = '' then '2100-01-01' &#xd;else hasta.fec end ,'YYYY-MM-DD') &#xd;and lo.fec_alta &gt;= to_date(case when desde.fec is null or desde.fec = '' then '1899-01-01' &#xd;else desde.fec end,'YYYY-MM-DD')</sql>
      <result outputType="json">{"movimientos":{&#xd;"movimiento": [&#xd;{&#xd;"boleta":"$boleta",&#xd;"fecha":"$fecha",&#xd;"nombre":"$nombre",&#xd;"razon_social":"$razon_social",&#xd;"patente":"$patente",&#xd;"neto":"$neto",&#xd;"descripcion":"$descripcion",&#xd;"cantidad":"$cantidad",&#xd;"estado":"$estado"&#xd;}&#xd;]&#xd;}&#xd;}</result>
      <param name="fechasta" sqlType="STRING"/>
      <param name="fecdesde" sqlType="STRING"/>
      <param name="arti_id" sqlType="STRING"/>
      <param name="clie_id" sqlType="STRING"/>
      <param name="cuit" sqlType="STRING"/>
   </query>
   <query id="getEstadoCamion" useConfig="ToolsDataSource">
      <sql>select mt.estado&#xd;from&#xd;	prd.movimientos_trasportes mt ,&#xd;	(select :patente patente) pat&#xd;where mt.fec_alta = (select max(mtra.fec_alta)&#xd;				   from prd.movimientos_trasportes mtra&#xd;				   where mtra.patente = pat.patente)&#xd;and mt.patente = pat.patente</sql>
      <result outputType="json">{&#xd;  "respuesta":{&#xd;    "estado":"$estado"&#xd;  }&#xd;}</result>
      <param name="patente" sqlType="STRING"/>
   </query>
   <query id="updateProveedor" useConfig="ToolsDataSource">
      <sql>update prd.movimientos_trasportes &#xd;set 	prov_id = cast(:prov_id as integer),&#xd;		boleta = :boleta, &#xd;		tara = cast(:tara as float8),&#xd;		neto = cast(:neto as float8),&#xd;                accion = :accion&#xd;where motr_id = cast(:motr_id as integer)</sql>
      <param name="prov_id" sqlType="STRING"/>
      <param name="boleta" sqlType="STRING"/>
      <param name="tara" sqlType="STRING"/>
      <param name="neto" sqlType="STRING"/>
      <param name="motr_id" sqlType="STRING"/>
      <param name="accion" sqlType="STRING"/>
   </query>
   <query id="getMovimientoTransporte" useConfig="ToolsDataSource">
      <sql>select DISTINCT mt.motr_id, es.nombre establecimiento, es.esta_id, mt.cuit, mt.boleta, &#xd;       mt.conductor, mt.tipo, mt.acoplado, pr.nombre proveedor, tr.razon_social transportista,&#xd;       to_char(mt.fecha_entrada,'dd-mm-yyyy') fecha_entrada, mt.patente, mt.bruto, mt.tara, &#xd;       mt.neto, mt.estado, mt.accion, 'tipo_movimiento' tipo_movimiento, mt.prov_id &#xd;from prd.movimientos_trasportes mt&#xd;inner join prd.establecimientos es on es.esta_id = mt.esta_id&#xd;inner join alm.alm_proveedores pr on mt.prov_id = pr.prov_id&#xd;inner join core.transportistas tr on mt.cuit = tr.cuit&#xd;where mt.empr_id = cast(:empr_id as integer)&#xd;and mt.motr_id = cast(:motr_id as integer)</sql>
      <result outputType="json">{&#xd;    "movimiento": {&#xd;        "motr_id": "$motr_id",&#xd;        "esta_id": "$esta_id",&#xd;        "establecimiento": "$establecimiento",&#xd;        "cuit": "$cuit",&#xd;        "boleta": "$boleta",&#xd;        "conductor": "$conductor",&#xd;        "tipo": "$tipo",&#xd;        "acoplado": "$acoplado",&#xd;        "proveedor": "$proveedor",&#xd;        "transportista": "$transportista",&#xd;        "fecha_entrada": "$fecha_entrada",&#xd;        "patente": "$patente",&#xd;        "bruto": "$bruto",&#xd;        "tara": "$tara",&#xd;        "neto": "$neto",&#xd;        "estado": "$estado",&#xd;        "accion": "$accion",&#xd;        "@getArticulosMovimientoTransporte": "$tipo_movimiento-&gt;tipo_movimiento,$motr_id-&gt;motr_id"&#xd;    }&#xd;}</result>
      <param name="empr_id" sqlType="STRING"/>
      <param name="motr_id" sqlType="STRING"/>
   </query>
   <query id="setRemito" useConfig="ToolsDataSource">
      <sql>INSERT INTO alm.remitos (&#xd;    nro_remito,&#xd;    clie_id,&#xd;    empr_id,&#xd;    usr_alta,&#xd;    usr_app_alta,&#xd;    usr_ult_modif,&#xd;    usr_app_ult_modif,&#xd;    fec_ult_modif&#xd;)&#xd;VALUES (&#xd;    cast(:nro_remito as integer),&#xd;    cast(:clie_id as integer),&#xd;    cast(:empr_id as integer),&#xd;    :usr_alta,&#xd;    :usr_app_alta,&#xd;    :usr_ult_modif,&#xd;    :usr_app_ult_modif,&#xd;    TO_DATE(:fec_ult_modif, 'YYYY-MM-DD')&#xd;)returning remi_id</sql>
      <result outputType="json">{&#xd;  "respuesta":{&#xd;    "remi_id":"$remi_id"&#xd;  }&#xd;}</result>
      <param name="nro_remito" sqlType="STRING"/>
      <param name="clie_id" sqlType="STRING"/>
      <param name="empr_id" sqlType="STRING"/>
      <param name="usr_alta" sqlType="STRING"/>
      <param name="usr_app_alta" sqlType="STRING"/>
      <param name="usr_ult_modif" sqlType="STRING"/>
      <param name="usr_app_ult_modif" sqlType="STRING"/>
      <param name="fec_ult_modif" sqlType="STRING"/>
   </query>
   <query id="setDetalleRemito" useConfig="ToolsDataSource">
      <sql>INSERT INTO alm.lineas_remitos (&#xd;    remi_id,&#xd;    core_id,&#xd;    cantidad&#xd;)&#xd;VALUES (&#xd;    cast(:remi_id as integer),&#xd;    cast(:core_id as integer),&#xd;    cast(:cantidad as float)&#xd;)</sql>
      <param name="remi_id" sqlType="STRING"/>
      <param name="core_id" sqlType="STRING"/>
      <param name="cantidad" sqlType="STRING"/>
   </query>
   <query id="getSotrEmprId" useConfig="ToolsDataSource">
      <sql>SELECt empr_id&#xd;FROM log.solicitantes_transporte st &#xd;where st.sotr_id = cast(:sotr_id as integer)</sql>
      <result outputType="json">{&#xd;  "solicitanteTransporte":&#xd;   {"emprId":"$empr_id"}&#xd;}</result>
      <param name="sotr_id" sqlType="STRING"/>
   </query>
   <query id="getSolicitudContenedorNicks" useConfig="ToolsDataSource">
      <sql>SELECT u1.usernick tran_nick, u2.usernick sotr_nick&#xd;FROM log.solicitudes_contenedor sc  &#xd;,log.solicitantes_transporte st &#xd;,log.transportistas tr&#xd;,seg.users u1&#xd;,seg.users u2&#xd;WHERE sc.soco_id =  CAST ( :soco_id AS integer)&#xd;AND tr.tran_id = sc.tran_id  &#xd;AND st.sotr_id = sc.sotr_id  &#xd;AND u1.email = tr.user_id &#xd;AND u2.email = st.user_id</sql>
      <result outputType="json">{&#xd; "solicitudContenedor": {&#xd; "tran_nick": "$tran_nick",&#xd; "sotr_nick": "$sotr_nick"&#xd; }&#xd;}</result>
      <param name="soco_id" sqlType="STRING"/>
   </query>
   <query id="getSolicitudRetiroNicks" useConfig="ToolsDataSource">
      <sql>SELECT u1.usernick tran_nick, u2.usernick sotr_nick&#xd;FROM log.solicitudes_retiro sr   &#xd;,log.solicitantes_transporte st &#xd;,log.transportistas tr&#xd;,log.contenedores_entregados ce&#xd;,log.contenedores c &#xd;,seg.users u1&#xd;,seg.users u2&#xd;WHERE sr.sore_id =  CAST ( :sore_id AS integer)&#xd;AND st.sotr_id = sr.sotr_id   &#xd;AND ce.sore_id = sr.sore_id&#xd;AND c.cont_id =ce.cont_id &#xd;AND c.tran_id = tr.tran_id &#xd;AND u1.email = tr.user_id &#xd;AND u2.email = st.user_id &#xd;LIMIT 1</sql>
      <result outputType="json">{&#xd; "solicitudRetiro": {&#xd; "tran_nick": "$tran_nick",&#xd; "sotr_nick": "$sotr_nick"&#xd; }&#xd;}</result>
      <param name="sore_id" sqlType="STRING"/>
   </query>
   <query id="getOrdenTransporteNicks" useConfig="ToolsDataSource">
      <sql>SELECT u1.usernick tran_nick, u2.usernick sotr_nick&#xd;FROM log.ordenes_transporte ot &#xd;,log.solicitantes_transporte st &#xd;,log.transportistas tr&#xd;,seg.users u1&#xd;,seg.users u2&#xd;WHERE ot.ortr_id =  CAST ( :ortr_id AS integer)&#xd;AND tr.tran_id = ot.tran_id &#xd;AND st.sotr_id = ot.sotr_id &#xd;AND u1.email = tr.user_id &#xd;AND u2.email = st.user_id</sql>
      <result outputType="json">{&#xd; "ordenTransporte": {&#xd; "tran_nick": "$tran_nick",&#xd; "sotr_nick": "$sotr_nick"&#xd; }&#xd;}</result>
      <param name="ortr_id" sqlType="STRING"/>
   </query>
   <resource method="GET" path="/transporte/movimiento/list/{tipo_movimiento}/{empr_id}">
      <call-query href="getMovimientosTransporte">
         <with-param name="tipo_movimiento" query-param="tipo_movimiento"/>
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/entradas">
      <call-query href="setEntradaXReci">
         <with-param name="boleta" query-param="boleta"/>
         <with-param name="patente" query-param="patente"/>
         <with-param name="acoplado" query-param="acoplado"/>
         <with-param name="conductor" query-param="conductor"/>
         <with-param name="tipo" query-param="tipo"/>
         <with-param name="bruto" query-param="bruto"/>
         <with-param name="tara" query-param="tara"/>
         <with-param name="neto" query-param="neto"/>
         <with-param name="fecha" query-param="fecha"/>
         <with-param name="proveedor" query-param="proveedor"/>
         <with-param name="establecimiento" query-param="establecimiento"/>
         <with-param name="reci_id" query-param="reci_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/entradas">
      <call-query href="setEntrada">
         <with-param name="boleta" query-param="boleta"/>
         <with-param name="patente" query-param="patente"/>
         <with-param name="acoplado" query-param="acoplado"/>
         <with-param name="conductor" query-param="conductor"/>
         <with-param name="tipo" query-param="tipo"/>
         <with-param name="bruto" query-param="bruto"/>
         <with-param name="tara" query-param="tara"/>
         <with-param name="neto" query-param="neto"/>
         <with-param name="fecha" query-param="fecha"/>
         <with-param name="proveedor" query-param="proveedor"/>
         <with-param name="establecimiento" query-param="establecimiento"/>
         <with-param name="estado" query-param="estado"/>
         <with-param name="cuit" query-param="cuit"/>
         <with-param name="accion" query-param="accion"/>
      </call-query>
   </resource>
   <resource method="GET" path="/camion_establecimiento/{esta_id}">
      <call-query href="getCamionEstablecimiento">
         <with-param name="esta_id" query-param="esta_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/camion/lotes/{patente}">
      <call-query href="getLotesCamion">
         <with-param name="patente" query-param="patente"/>
      </call-query>
   </resource>
   <resource method="POST" path="/entradas">
      <call-query href="setEntrada">
         <with-param name="boleta" query-param="boleta"/>
         <with-param name="patente" query-param="patente"/>
         <with-param name="acoplado" query-param="acoplado"/>
         <with-param name="conductor" query-param="conductor"/>
         <with-param name="tipo" query-param="tipo"/>
         <with-param name="bruto" query-param="bruto"/>
         <with-param name="tara" query-param="tara"/>
         <with-param name="neto" query-param="neto"/>
         <with-param name="fecha" query-param="fecha"/>
         <with-param name="proveedor" query-param="proveedor"/>
         <with-param name="establecimiento" query-param="establecimiento"/>
         <with-param name="estado" query-param="estado"/>
         <with-param name="cuit" query-param="cuit"/>
         <with-param name="accion" query-param="accion"/>
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/transportistas/{empr_id}">
      <call-query href="getTransportistas">
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="PUT" path="/camiones/estado">
      <call-query href="setCamionEstado">
         <with-param name="estado" query-param="estado"/>
         <with-param name="motr_id" query-param="motr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/camiones/{patente}/{empr_id}">
      <call-query href="getCamion">
         <with-param name="patente" query-param="patente"/>
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="PUT" path="/camiones/salida">
      <call-query href="setSalidaCamion">
         <with-param name="bruto" query-param="bruto"/>
         <with-param name="neto" query-param="neto"/>
         <with-param name="estado" query-param="estado"/>
         <with-param name="motr_id" query-param="motr_id"/>
         <with-param name="tara" query-param="tara"/>
      </call-query>
   </resource>
   <resource method="GET" path="/movimientos/proveedor/{prov_id}/transporte/{cuit}/producto/{arti_id}/u_medida/{u_medida}/desde/{fecdesde}/hasta/{fechasta}/empresa/{empr_id}/ingresos">
      <call-query href="getIngresosMovimientoTransporte">
         <with-param name="fechasta" query-param="fechasta"/>
         <with-param name="fecdesde" query-param="fecdesde"/>
         <with-param name="arti_id" query-param="arti_id"/>
         <with-param name="prov_id" query-param="prov_id"/>
         <with-param name="cuit" query-param="cuit"/>
         <with-param name="u_medida" query-param="u_medida"/>
         <with-param name="empr_id" query-param="empr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/cantidad/proveedor/{prov_id}/transporte/{cuit}/producto/{arti_id}/desde/{fecdesde}/hasta/{fechasta}/ingresos">
      <call-query href="getCantidadIngresosMovimientoTransporte">
         <with-param name="fechasta" query-param="fechasta"/>
         <with-param name="fecdesde" query-param="fecdesde"/>
         <with-param name="arti_id" query-param="arti_id"/>
         <with-param name="prov_id" query-param="prov_id"/>
         <with-param name="cuit" query-param="cuit"/>
      </call-query>
   </resource>
   <resource method="GET" path="/movimientos/cliente/{clie_id}/transporte/{cuit}/producto/{arti_id}/desde/{fecdesde}/hasta/{fechasta}/salidas">
      <call-query href="getSalidasMovimientoTransporte">
         <with-param name="fechasta" query-param="fechasta"/>
         <with-param name="fecdesde" query-param="fecdesde"/>
         <with-param name="arti_id" query-param="arti_id"/>
         <with-param name="clie_id" query-param="clie_id"/>
         <with-param name="cuit" query-param="cuit"/>
      </call-query>
   </resource>
   <resource method="GET" path="/camiones/estado/pat/{patente}">
      <call-query href="getEstadoCamion">
         <with-param name="patente" query-param="patente"/>
      </call-query>
   </resource>
   <resource method="PUT" path="/camiones/proveedor">
      <call-query href="updateProveedor">
         <with-param name="prov_id" query-param="prov_id"/>
         <with-param name="motr_id" query-param="motr_id"/>
         <with-param name="boleta" query-param="boleta"/>
         <with-param name="tara" query-param="tara"/>
         <with-param name="neto" query-param="neto"/>
         <with-param name="accion" query-param="accion"/>
      </call-query>
   </resource>
   <resource method="GET" path="/transporte/movimiento/motr_id/{motr_id}/{empr_id}">
      <call-query href="getMovimientoTransporte">
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="motr_id" query-param="motr_id"/>
      </call-query>
   </resource>
   <resource method="POST" path="/remito">
      <call-query href="setRemito">
         <with-param name="nro_remito" query-param="nro_remito"/>
         <with-param name="clie_id" query-param="clie_id"/>
         <with-param name="empr_id" query-param="empr_id"/>
         <with-param name="usr_alta" query-param="usr_alta"/>
         <with-param name="usr_app_alta" query-param="usr_app_alta"/>
         <with-param name="usr_ult_modif" query-param="usr_ult_modif"/>
         <with-param name="usr_app_ult_modif" query-param="usr_app_ult_modif"/>
         <with-param name="fec_ult_modif" query-param="fec_ult_modif"/>
      </call-query>
   </resource>
   <resource method="POST" path="/remito_detalle">
      <call-query href="setDetalleRemito">
         <with-param name="remi_id" query-param="remi_id"/>
         <with-param name="core_id" query-param="core_id"/>
         <with-param name="cantidad" query-param="cantidad"/>
      </call-query>
   </resource>
   <resource method="GET" path="/solicitanteTransporte/{sotr_id}/emprId">
      <call-query href="getSotrEmprId">
         <with-param name="sotr_id" query-param="sotr_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/solicitudContenedor/nicks/{soco_id}">
      <call-query href="getSolicitudContenedorNicks">
         <with-param name="soco_id" query-param="soco_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/solicitudRetiro/nicks/{sore_id}">
      <call-query href="getSolicitudRetiroNicks">
         <with-param name="sore_id" query-param="sore_id"/>
      </call-query>
   </resource>
   <resource method="GET" path="/ordenTransporte/nicks/{ortr_id}">
      <call-query href="getOrdenTransporteNicks">
         <with-param name="ortr_id" query-param="ortr_id"/>
      </call-query>
   </resource>
</data>
